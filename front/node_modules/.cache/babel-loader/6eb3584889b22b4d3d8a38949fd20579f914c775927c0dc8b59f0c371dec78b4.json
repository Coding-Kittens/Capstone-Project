{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js\",\n  _s = $RefreshSig$();\nimport PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport axios from \"axios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from './Tab';\n\n///shows all the bookmarks for a book and lets you add a new one\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookMark = _ref => {\n  _s();\n  let {\n    bookId,\n    username,\n    currPageId\n  } = _ref;\n  const [notes, setNotes] = useState([]);\n  const [currNote, setCurrNote] = useState(1);\n  const [addForm, setAddForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n  useEffect(() => {\n    const getNotes = async () => {\n      const res = await axios.get(`/bookmarks/${bookId}`);\n      console.log('get book marks', res);\n      if (res.data.bookmarks.length > 0) {\n        setNotes(n => n = res.data.bookmarks);\n      }\n    };\n    getNotes();\n  }, []);\n  const changeNote = num => {\n    let newNote = num;\n    if (newNote < 0) newNote = 0;\n    if (newNote >= notes.length) newNote = notes.length - 1;\n    setCurrNote(newNote);\n  };\n  const addNote = async (data, pageId) => {\n    const res = await axios.post(`/bookmarks/${bookId}/${pageId}`, data);\n    console.log('add book mark', res);\n    if (res.data.bookmark) {\n      setNotes(n => n = [...notes, res.data.bookmark]);\n    }\n  };\n  const deleteNote = async pageId => {\n    const res = await axios.delete(`/bookmarks/${bookId}/${pageId}`);\n    console.log(res);\n    if (res.data.message === \"Deleted!\") {\n      if (currNote) {\n        if (notes[currNote].id === pageId) {\n          changeNote(currNote - 1);\n        }\n      }\n      let updatedNotes = notes.map(note => {\n        if (note.id != pageId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(n => n = updatedNotes);\n    }\n  };\n  const editNote = async (data, pageId) => {\n    const res = await axios.patch(`/bookmarks/${bookId}/${pageId}`, {\n      ...data,\n      page_id: currPageId,\n      book_id: bookId\n    });\n    if (res.data.bookmark) {\n      setNotes(n => n = notes.map(note => note.id != pageId ? note : res.data.bookmark));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: bookmark,\n      alt: \"bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: notes.length > 0 && currPageId ? notes.map((note, inx) => /*#__PURE__*/_jsxDEV(Tab, {\n        info: note,\n        page_id: currPageId,\n        handleClick: () => changeNote(inx),\n        editTab: editNote,\n        deleteTab: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 13\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: data => addNote(data, currPageId),\n      inputs: [{\n        text: \"text\"\n      }],\n      initData: {\n        text: \"\"\n      },\n      submitText: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New Bookmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(BookMark, \"VMKEYY3Vv//DZLdKjGWBQ4+vQtM=\");\n_c = BookMark;\nexport default BookMark;\nvar _c;\n$RefreshReg$(_c, \"BookMark\");","map":{"version":3,"names":["PopUpForm","useState","useEffect","useToggle","bookmark","axios","NotePage","Tab","BookMark","bookId","username","currPageId","notes","setNotes","currNote","setCurrNote","addForm","setAddForm","addExistingForm","setAddExistingForm","getNotes","res","get","console","log","data","bookmarks","length","n","changeNote","num","newNote","addNote","pageId","post","deleteNote","delete","message","id","updatedNotes","map","note","editNote","patch","page_id","book_id","inx","text"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js"],"sourcesContent":["import PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport axios from \"axios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from './Tab';\n\n\n\n///shows all the bookmarks for a book and lets you add a new one\nconst BookMark = ({ bookId, username,currPageId}) => {\n\n\n  const [notes, setNotes] = useState([]);\n  const [currNote, setCurrNote] = useState(1);\n  const [addForm, setAddForm] = useState(false);\n\n  const [addExistingForm, setAddExistingForm] = useState(false);\n\n  useEffect(() => {\n    const getNotes = async () => {\n      const res = await axios.get(`/bookmarks/${bookId}`);\n      console.log('get book marks',res);\n      if (res.data.bookmarks.length > 0) {\n        setNotes((n) => (n = res.data.bookmarks));\n      }\n    };\n    getNotes();\n  }, []);\n\n\n  const changeNote = (num) => {\n    let newNote = num;\n    if (newNote < 0) newNote = 0;\n    if (newNote >= notes.length) newNote = notes.length-1;\n    setCurrNote(newNote);\n  };\n\n  const addNote = async (data,pageId) => {\n    const res = await axios.post(`/bookmarks/${bookId}/${pageId}`, data);\nconsole.log('add book mark', res);\n    if (res.data.bookmark) {\n      setNotes((n) => (n = [...notes, res.data.bookmark]));\n    }\n  };\n\n  const deleteNote = async (pageId) => {\n    const res = await axios.delete(`/bookmarks/${bookId}/${pageId}`);\n    console.log(res);\n    if (res.data.message === \"Deleted!\") {\n      if (currNote) {\n        if (notes[currNote].id === pageId) {\n          changeNote(currNote-1);\n        }\n      }\n      let updatedNotes = notes.map((note) => {\n        if (note.id != pageId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes((n) => (n = updatedNotes));\n    }\n  };\n\n  const editNote = async (data,pageId) => {\n    const res = await axios.patch(`/bookmarks/${bookId}/${pageId}`, {...data,page_id:currPageId,book_id: bookId});\n    if (res.data.bookmark) {\n      setNotes(\n        (n) =>\n          (n = notes.map((note) => (note.id != pageId ? note : res.data.bookmark)))\n      );\n    }\n  };\n\n\n  return (\n    <>\n   <img className=\"CharacterBook_Image\" src={bookmark} alt=\"bookmark\" />\n\n\n      <div className=\"CharacterBook\">\n\n\n        {notes.length > 0 && currPageId?  (\n          notes.map((note, inx) => (\n            <Tab info={note} page_id={currPageId} handleClick={()=>changeNote(inx)} editTab={editNote} deleteTab={deleteNote}/>\n          ))\n        ) :null}\n      </div>\n\n\n\n      {addForm ? (\n        <PopUpForm\n          closeForm={() => setAddForm(false)}\n          submit={(data)=>addNote(data,currPageId)}\n          inputs={[\n            { text: \"text\"},\n          ]}\n          initData={{\n            text: \"\",\n          }}\n          submitText=\"Add\"\n        />\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddForm(true)}\n            name=\"button\"\n          >\n            New Bookmark\n          </button>\n        </>\n      )}\n\n    </>\n  );\n};\nexport default BookMark;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/Book.js\",\n  _s = $RefreshSig$();\nimport cover from './sprites/OpenBook1.png';\nimport page from './sprites/OpenBookPages.png';\nimport { useState, useEffect } from 'react';\nimport InputPage from './InputPage';\nimport Page from './Page';\nimport axios from 'axios';\nimport useAxios from './hooks/useAxios';\nimport './css/Book.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Book = _ref => {\n  _s();\n  let {\n    areReading,\n    bookId\n  } = _ref;\n  const [reqPages, pages, setPages] = useAxios([]);\n  const [currPage, setCurrPage] = useState([0, 1]);\n  console.log(pages);\n  useEffect(() => {\n    reqChars('get', `/books/${bookId}/pages`, 'pages');\n  }, []);\n  const changePage = num => {\n    let newPage = currPage[0] ? currPage[0] + num : num;\n    if (newPage < 0) newPage = 0;\n    if (newPage > pages.length && areReading) newPage = pages.length - 2;\n    if (newPage > pages.length && !areReading) setCurrPage([newPage, newPage++]);\n  };\n  const addCharacter = async data => {\n    reqChars('post', `/books/${bookId}/characters`, 'character', data);\n  };\n  const deleteCharacter = async characterId => {\n    const res = await reqChars('delete', `/books/${bookId}/characters/${characterId}`);\n    if (res.message === 'Deleted!') {\n      if (currChar) {\n        if (chars[currChar - 1].id === characterId) {\n          changeCharacter(-1);\n        }\n      }\n      let updatedChars = chars.map(char => {\n        if (char.id != characterId) return char;\n      });\n      if (!updatedChars[0]) updatedChars = [];\n      setChars(n => n = updatedChars);\n    }\n  };\n  const editCharacter = async data => {\n    const characterId = chars[currChar - 1].id;\n    reqChars('patch', `/books/${bookId}/characters/${characterId}`, 'character', data);\n    // const res = await axios.patch(`/books/${bookId}/characters/${characterId}`,data);\n    // if(res.data.character){\n    //   setChars((n)=> n= chars.map(char=> char.id != characterId? char : res.data.character));\n    // }\n  };\n\n  const addExistingChar = async data => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: noteBook,\n      alt: \"NoteBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 3\n    }, this), editForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setEditForm(false),\n      submit: editCharacter,\n      inputs: [{\n        title: 'Name',\n        name: 'name'\n      }, {\n        title: 'Birthday',\n        name: 'birthday'\n      }, {\n        title: 'Description',\n        name: 'description'\n      }, {\n        title: 'Extra info',\n        name: 'extra_info'\n      }, {\n        title: 'Backstory',\n        name: 'story'\n      }],\n      initData: {\n        name: '',\n        birthday: '',\n        description: '',\n        extra_info: '',\n        story: ''\n      },\n      submitText: \"Add Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 3\n    }, this) : null, addExistingForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NewBookCharacterForm, {\n        addChar: addExistingChar,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setAddExistingForm(false),\n        name: \"btn\",\n        children: \"Cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: [currChar ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Table of Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 6\n      }, this), currChar && chars.length > 0 ? /*#__PURE__*/_jsxDEV(Character, {\n        handleClick: () => setEditForm(true),\n        character: chars[currChar - 1],\n        deleteChar: deleteCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 5\n      }, this) : chars.map((char, inx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CharLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => changeCharacter(inx + 1),\n          name: \"button\",\n          children: char.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteCharacter(char.id),\n          name: \"button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 5\n        }, this)]\n      }, char.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 3\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: addCharacter,\n      inputs: [{\n        title: 'Name',\n        name: 'name'\n      }, {\n        title: 'Birthday',\n        name: 'birthday'\n      }, {\n        title: 'Description',\n        name: 'description'\n      }, {\n        title: 'Extra info',\n        name: 'extra_info'\n      }, {\n        title: 'Backstory',\n        name: 'story'\n      }],\n      initData: {\n        name: '',\n        birthday: '',\n        description: '',\n        extra_info: '',\n        story: ''\n      },\n      submitText: \"Add Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 3\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddExistingForm(true),\n        name: \"btn\",\n        children: \"Add existing character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Back\",\n      onClick: () => changeCharacter(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 3\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Next\",\n      onClick: () => changeCharacter(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true);\n\n  //\n  // const [reqPages,pages,setPages]=useAxios([]);\n  // const [pageNum,setPageNum]=useState([1,2]);//maybe later keep track of what page they were on last and add it to the book in the db\n  //\n  //\n  // useEffect(()=>{\n  //   console.log('first');\n  //   const getPages = async()=>{\n  //     const res = await reqPages('get',`/books/${bookId}/pages`,'pages');\n  //      if(res.data.length<=0 && !areReading){\n  //       const res = await reqPages('post',`/books/${bookId}/pages`,'pages',{num_of_pages:2,page_num:pageNum[0]});\n  //     }\n  //\n  //   }\n  //   getPages();\n  // },[])\n  //\n  //\n  //\n  // const updatePage=async(text,pageId)=>{\n  //   let res = await axios.patch(`/books/${bookId}/pages/${pageId}`,{text:text});\n  //   console.log(res.data.id);\n  //   if(res.data.id){\n  //     // return res.data;\n  //    setPages((n)=> n= pages.map(page=> page.id === res.data.id? res.data: page));\n  //   }\n  // }\n  //\n  //\n  // /// if text is different update them\n  //\n  // //change the page num\n  //\n  // //update the page num\n  //\n  // //this should cause a rerender and update the input to show the correct pages\n  //\n  //\n  //\n  // const changePage = async(page,num)=>{\n  //\n  //\n  // console.log('page',page);\n  // console.log('num',num);\n  //   //\n  //   // if(page.text != pages[pageNum[0]-1].text){\n  //   //   await updatePage(page.text,pages[pageNum[0]-1].id);\n  //   // }\n  //   //\n  //   // if(page.text2){\n  //   //   if(page.text2 != pages[pageNum[1]-1].text){\n  //   //     await updatePage(page.text2,pages[pageNum[1]-1].id);\n  //   //   }\n  //   // }\n  //\n  //   if(pageNum[1]+num > pages.length){\n  //     if(!areReading){\n  //       console.log('is not reading  is grater than length');\n  //       console.log('new page nums',[pageNum[0]+num,pageNum[1]+num]);\n  //         setPageNum((n)=> n=[pageNum[0]+num,pageNum[1]+num]);\n  //     }\n  //   }\n  //   else if(pageNum[0]+num > 0){\n  //     console.log('is grater than zero');\n  //     console.log('new page nums',[pageNum[0]+num,pageNum[1]+num]);\n  //       setPageNum((n)=> n=[pageNum[0]+num,pageNum[1]+num]);\n  //   }\n  // }\n  //\n  //\n  //\n  // const addPage =async()=>{\n  //   const res = await reqPages('post',`/books/${bookId}/pages`,'pages',{num_of_pages:2,page_num:pageNum[0]});\n  // }\n  //\n  //\n  //\n  //\n  //\n  // return <div className ='Book'>\n  //\n  // <img className ='Book_cover' src={cover} alt=\"cover\"/>\n  // <img className ='Book_pages' src={page} alt=\"pages\"/>\n  //\n  //\n  //\n  // {\n  //   pages.length>0?\n  //     areReading?\n  //     <>\n  //     <Page pageNum={pageNum[0]} changePage={changePage} text={pages[pageNum[0]-1].text}/> <Page pageNum={pageNum[1]} changePage={changePage} text={pages[pageNum[1]-1].text}/>\n  //     </>\n  //     : <>\n  //     <InputPage pageNum={pageNum[0]} changePage={changePage} text={[pages[pageNum[0]-1].text,pages[pageNum[1]-1].text]} isTwoPages={true}/>\n  //     </>\n  //   : null\n  // }\n  //\n  //\n  // </div>\n};\n_s(Book, \"iRZPL7S78+jCvIO/KVoLWGfTyxQ=\", false, function () {\n  return [useAxios];\n});\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["cover","page","useState","useEffect","InputPage","Page","axios","useAxios","Book","areReading","bookId","reqPages","pages","setPages","currPage","setCurrPage","console","log","reqChars","changePage","num","newPage","length","addCharacter","data","deleteCharacter","characterId","res","message","currChar","chars","id","changeCharacter","updatedChars","map","char","setChars","n","editCharacter","addExistingChar","noteBook","editForm","setEditForm","title","name","birthday","description","extra_info","story","addExistingForm","username","setAddExistingForm","inx","addForm","setAddForm"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/Book.js"],"sourcesContent":["import cover from './sprites/OpenBook1.png'\nimport page from './sprites/OpenBookPages.png'\nimport {useState,useEffect} from 'react';\nimport InputPage from './InputPage'\nimport Page from './Page'\nimport axios from 'axios';\nimport useAxios from './hooks/useAxios';\nimport './css/Book.css';\nconst Book =({areReading,bookId})=>{\n\n\n\n  const [reqPages,pages,setPages] = useAxios([]);\n  const [currPage,setCurrPage]=useState([0,1]);\n\n\n  console.log(pages);\n\n  useEffect(()=>{\n    reqChars('get',`/books/${bookId}/pages`,'pages');\n  },[])\n\n\n\n  const changePage =(num)=>{\n  let newPage = currPage[0]? currPage[0]+num : num;\n  if (newPage<0) newPage = 0;\n  if(newPage>pages.length && areReading) newPage =pages.length-2;\n  if(newPage>pages.length && !areReading)\n  setCurrPage([newPage,newPage++]);\n  }\n\n\n  const addCharacter =async(data)=>{\n    reqChars('post',`/books/${bookId}/characters`,'character',data);\n  }\n\n  const deleteCharacter =async(characterId)=>{\n  const res = await reqChars('delete',`/books/${bookId}/characters/${characterId}`)\n\n     if(res.message === 'Deleted!'){\n       if(currChar){\n         if(chars[currChar-1].id === characterId){\n           changeCharacter(-1);\n         }\n       }\n       let updatedChars = chars.map(char=> {if(char.id != characterId)return char})\n       if(!updatedChars[0]) updatedChars=[];\n       setChars((n)=> n= updatedChars);\n     }\n\n  }\n\n  const editCharacter =async(data)=>{\n    const characterId = chars[currChar-1].id\n      reqChars('patch',`/books/${bookId}/characters/${characterId}`,'character',data);\n    // const res = await axios.patch(`/books/${bookId}/characters/${characterId}`,data);\n    // if(res.data.character){\n    //   setChars((n)=> n= chars.map(char=> char.id != characterId? char : res.data.character));\n    // }\n  }\n\n\n  const addExistingChar =async(data)=>{\n\n  }\n\n\n  return <>\n  <img className ='CharacterBook_Image' src={noteBook} alt=\"NoteBook\"/>\n\n  {editForm?\n  <PopUpForm closeForm ={()=>setEditForm(false)} submit={editCharacter} inputs={[{title: 'Name', name: 'name'},{title: 'Birthday', name:'birthday'},{title: 'Description', name:'description'},{title:'Extra info', name:'extra_info'},{title:'Backstory', name:'story'}]} initData={{name:'',birthday:'',description:'',extra_info:'',story:''}} submitText='Add Character'/>\n  :null\n  }\n\n  {\n    addExistingForm?\n    <>\n    <NewBookCharacterForm addChar={addExistingChar} username={username}/>\n    <button type=\"button\" onClick={()=>setAddExistingForm(false)}  name=\"btn\">Cancle</button>\n    </>\n    :null\n  }\n\n\n  <div className='CharacterBook'>\n\n  {\n    currChar?\n    null\n    :<h3>Table of Contents</h3>\n  }\n\n  {\n    currChar && chars.length>0?\n    <Character handleClick={()=>setEditForm(true)} character={chars[currChar-1]} deleteChar={deleteCharacter}/>\n    :\n    chars.map((char,inx) => <div className='CharLink' key={char.id}>\n    <button type=\"button\" onClick={()=>changeCharacter(inx+1)} name=\"button\">{char.name}</button>\n    <button type=\"button\" onClick={()=>deleteCharacter(char.id)} name=\"button\">X</button>\n  </div>\n  )\n  }\n\n  </div>\n\n  {addForm?\n  <PopUpForm closeForm ={()=>setAddForm(false)} submit={addCharacter} inputs={[{title: 'Name', name: 'name'},{title: 'Birthday', name:'birthday'},{title: 'Description', name:'description'},{title:'Extra info', name:'extra_info'},{title:'Backstory', name:'story'}]} initData={{name:'',birthday:'',description:'',extra_info:'',story:''}} submitText='Add Character'/>\n  :<>\n  <button type=\"button\" className='CharacterBook_button' onClick={()=>setAddForm(true)} name=\"button\">New character</button>\n  <button type=\"button\" className='CharacterBook_button' onClick={()=>setAddExistingForm(true)}  name=\"btn\">Add existing character</button>\n  </>\n  }\n\n  <div className ='CharacterBook_Back' onClick ={()=>changeCharacter(-1)}></div>\n  <div className ='CharacterBook_Next' onClick ={()=>changeCharacter(1)}></div>\n  </>\n\n\n\n\n\n\n\n\n\n\n\n\n//\n// const [reqPages,pages,setPages]=useAxios([]);\n// const [pageNum,setPageNum]=useState([1,2]);//maybe later keep track of what page they were on last and add it to the book in the db\n//\n//\n// useEffect(()=>{\n//   console.log('first');\n//   const getPages = async()=>{\n//     const res = await reqPages('get',`/books/${bookId}/pages`,'pages');\n//      if(res.data.length<=0 && !areReading){\n//       const res = await reqPages('post',`/books/${bookId}/pages`,'pages',{num_of_pages:2,page_num:pageNum[0]});\n//     }\n//\n//   }\n//   getPages();\n// },[])\n//\n//\n//\n// const updatePage=async(text,pageId)=>{\n//   let res = await axios.patch(`/books/${bookId}/pages/${pageId}`,{text:text});\n//   console.log(res.data.id);\n//   if(res.data.id){\n//     // return res.data;\n//    setPages((n)=> n= pages.map(page=> page.id === res.data.id? res.data: page));\n//   }\n// }\n//\n//\n// /// if text is different update them\n//\n// //change the page num\n//\n// //update the page num\n//\n// //this should cause a rerender and update the input to show the correct pages\n//\n//\n//\n// const changePage = async(page,num)=>{\n//\n//\n// console.log('page',page);\n// console.log('num',num);\n//   //\n//   // if(page.text != pages[pageNum[0]-1].text){\n//   //   await updatePage(page.text,pages[pageNum[0]-1].id);\n//   // }\n//   //\n//   // if(page.text2){\n//   //   if(page.text2 != pages[pageNum[1]-1].text){\n//   //     await updatePage(page.text2,pages[pageNum[1]-1].id);\n//   //   }\n//   // }\n//\n//   if(pageNum[1]+num > pages.length){\n//     if(!areReading){\n//       console.log('is not reading  is grater than length');\n//       console.log('new page nums',[pageNum[0]+num,pageNum[1]+num]);\n//         setPageNum((n)=> n=[pageNum[0]+num,pageNum[1]+num]);\n//     }\n//   }\n//   else if(pageNum[0]+num > 0){\n//     console.log('is grater than zero');\n//     console.log('new page nums',[pageNum[0]+num,pageNum[1]+num]);\n//       setPageNum((n)=> n=[pageNum[0]+num,pageNum[1]+num]);\n//   }\n// }\n//\n//\n//\n// const addPage =async()=>{\n//   const res = await reqPages('post',`/books/${bookId}/pages`,'pages',{num_of_pages:2,page_num:pageNum[0]});\n// }\n//\n//\n//\n//\n//\n// return <div className ='Book'>\n//\n// <img className ='Book_cover' src={cover} alt=\"cover\"/>\n// <img className ='Book_pages' src={page} alt=\"pages\"/>\n//\n//\n//\n// {\n//   pages.length>0?\n//     areReading?\n//     <>\n//     <Page pageNum={pageNum[0]} changePage={changePage} text={pages[pageNum[0]-1].text}/> <Page pageNum={pageNum[1]} changePage={changePage} text={pages[pageNum[1]-1].text}/>\n//     </>\n//     : <>\n//     <InputPage pageNum={pageNum[0]} changePage={changePage} text={[pages[pageNum[0]-1].text,pages[pageNum[1]-1].text]} isTwoPages={true}/>\n//     </>\n//   : null\n// }\n//\n//\n// </div>\n}\n\nexport default Book;\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,yBAAyB;AAC3C,OAAOC,IAAI,MAAM,6BAA6B;AAC9C,SAAQC,QAAQ,EAACC,SAAS,QAAO,OAAO;AACxC,OAAOC,SAAS,MAAM,aAAa;AACnC,OAAOC,IAAI,MAAM,QAAQ;AACzB,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,QAAQ,MAAM,kBAAkB;AACvC,OAAO,gBAAgB;AAAC;AAAA;AACxB,MAAMC,IAAI,GAAE,QAAuB;EAAA;EAAA,IAAtB;IAACC,UAAU;IAACC;EAAM,CAAC;EAI9B,MAAM,CAACC,QAAQ,EAACC,KAAK,EAACC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,EAAE,CAAC;EAC9C,MAAM,CAACO,QAAQ,EAACC,WAAW,CAAC,GAACb,QAAQ,CAAC,CAAC,CAAC,EAAC,CAAC,CAAC,CAAC;EAG5Cc,OAAO,CAACC,GAAG,CAACL,KAAK,CAAC;EAElBT,SAAS,CAAC,MAAI;IACZe,QAAQ,CAAC,KAAK,EAAE,UAASR,MAAO,QAAO,EAAC,OAAO,CAAC;EAClD,CAAC,EAAC,EAAE,CAAC;EAIL,MAAMS,UAAU,GAAGC,GAAG,IAAG;IACzB,IAAIC,OAAO,GAAGP,QAAQ,CAAC,CAAC,CAAC,GAAEA,QAAQ,CAAC,CAAC,CAAC,GAACM,GAAG,GAAGA,GAAG;IAChD,IAAIC,OAAO,GAAC,CAAC,EAAEA,OAAO,GAAG,CAAC;IAC1B,IAAGA,OAAO,GAACT,KAAK,CAACU,MAAM,IAAIb,UAAU,EAAEY,OAAO,GAAET,KAAK,CAACU,MAAM,GAAC,CAAC;IAC9D,IAAGD,OAAO,GAACT,KAAK,CAACU,MAAM,IAAI,CAACb,UAAU,EACtCM,WAAW,CAAC,CAACM,OAAO,EAACA,OAAO,EAAE,CAAC,CAAC;EAChC,CAAC;EAGD,MAAME,YAAY,GAAE,MAAMC,IAAI,IAAG;IAC/BN,QAAQ,CAAC,MAAM,EAAE,UAASR,MAAO,aAAY,EAAC,WAAW,EAACc,IAAI,CAAC;EACjE,CAAC;EAED,MAAMC,eAAe,GAAE,MAAMC,WAAW,IAAG;IAC3C,MAAMC,GAAG,GAAG,MAAMT,QAAQ,CAAC,QAAQ,EAAE,UAASR,MAAO,eAAcgB,WAAY,EAAC,CAAC;IAE9E,IAAGC,GAAG,CAACC,OAAO,KAAK,UAAU,EAAC;MAC5B,IAAGC,QAAQ,EAAC;QACV,IAAGC,KAAK,CAACD,QAAQ,GAAC,CAAC,CAAC,CAACE,EAAE,KAAKL,WAAW,EAAC;UACtCM,eAAe,CAAC,CAAC,CAAC,CAAC;QACrB;MACF;MACA,IAAIC,YAAY,GAAGH,KAAK,CAACI,GAAG,CAACC,IAAI,IAAG;QAAC,IAAGA,IAAI,CAACJ,EAAE,IAAIL,WAAW,EAAC,OAAOS,IAAI;MAAA,CAAC,CAAC;MAC5E,IAAG,CAACF,YAAY,CAAC,CAAC,CAAC,EAAEA,YAAY,GAAC,EAAE;MACpCG,QAAQ,CAAEC,CAAC,IAAIA,CAAC,GAAEJ,YAAY,CAAC;IACjC;EAEH,CAAC;EAED,MAAMK,aAAa,GAAE,MAAMd,IAAI,IAAG;IAChC,MAAME,WAAW,GAAGI,KAAK,CAACD,QAAQ,GAAC,CAAC,CAAC,CAACE,EAAE;IACtCb,QAAQ,CAAC,OAAO,EAAE,UAASR,MAAO,eAAcgB,WAAY,EAAC,EAAC,WAAW,EAACF,IAAI,CAAC;IACjF;IACA;IACA;IACA;EACF,CAAC;;EAGD,MAAMe,eAAe,GAAE,MAAMf,IAAI,IAAG,CAEpC,CAAC;EAGD,oBAAO;IAAA,wBACP;MAAK,SAAS,EAAE,qBAAqB;MAAC,GAAG,EAAEgB,QAAS;MAAC,GAAG,EAAC;IAAU;MAAA;MAAA;MAAA;IAAA,QAAE,EAEpEC,QAAQ,gBACT,QAAC,SAAS;MAAC,SAAS,EAAG,MAAIC,WAAW,CAAC,KAAK,CAAE;MAAC,MAAM,EAAEJ,aAAc;MAAC,MAAM,EAAE,CAAC;QAACK,KAAK,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAM,CAAC,EAAC;QAACD,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAC;MAAU,CAAC,EAAC;QAACD,KAAK,EAAE,aAAa;QAAEC,IAAI,EAAC;MAAa,CAAC,EAAC;QAACD,KAAK,EAAC,YAAY;QAAEC,IAAI,EAAC;MAAY,CAAC,EAAC;QAACD,KAAK,EAAC,WAAW;QAAEC,IAAI,EAAC;MAAO,CAAC,CAAE;MAAC,QAAQ,EAAE;QAACA,IAAI,EAAC,EAAE;QAACC,QAAQ,EAAC,EAAE;QAACC,WAAW,EAAC,EAAE;QAACC,UAAU,EAAC,EAAE;QAACC,KAAK,EAAC;MAAE,CAAE;MAAC,UAAU,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,GAC3W,IAAI,EAIHC,eAAe,gBACf;MAAA,wBACA,QAAC,oBAAoB;QAAC,OAAO,EAAEV,eAAgB;QAAC,QAAQ,EAAEW;MAAS;QAAA;QAAA;QAAA;MAAA,QAAE,eACrE;QAAQ,IAAI,EAAC,QAAQ;QAAC,OAAO,EAAE,MAAIC,kBAAkB,CAAC,KAAK,CAAE;QAAE,IAAI,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgB;IAAA,gBACtF,GACF,IAAI,eAIP;MAAK,SAAS,EAAC,eAAe;MAAA,WAG5BtB,QAAQ,GACR,IAAI,gBACH;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAA0B,EAI3BA,QAAQ,IAAIC,KAAK,CAACR,MAAM,GAAC,CAAC,gBAC1B,QAAC,SAAS;QAAC,WAAW,EAAE,MAAIoB,WAAW,CAAC,IAAI,CAAE;QAAC,SAAS,EAAEZ,KAAK,CAACD,QAAQ,GAAC,CAAC,CAAE;QAAC,UAAU,EAAEJ;MAAgB;QAAA;QAAA;QAAA;MAAA,QAAE,GAE3GK,KAAK,CAACI,GAAG,CAAC,CAACC,IAAI,EAACiB,GAAG,kBAAK;QAAK,SAAS,EAAC,UAAU;QAAA,wBACjD;UAAQ,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAE,MAAIpB,eAAe,CAACoB,GAAG,GAAC,CAAC,CAAE;UAAC,IAAI,EAAC,QAAQ;UAAA,UAAEjB,IAAI,CAACS;QAAI;UAAA;UAAA;UAAA;QAAA,QAAU,eAC7F;UAAQ,IAAI,EAAC,QAAQ;UAAC,OAAO,EAAE,MAAInB,eAAe,CAACU,IAAI,CAACJ,EAAE,CAAE;UAAC,IAAI,EAAC,QAAQ;UAAA;QAAA;UAAA;UAAA;UAAA;QAAA,QAAW;MAAA,GAF9BI,IAAI,CAACJ,EAAE;QAAA;QAAA;QAAA;MAAA,QAG1D,CACL;IAAA;MAAA;MAAA;MAAA;IAAA,QAGK,EAELsB,OAAO,gBACR,QAAC,SAAS;MAAC,SAAS,EAAG,MAAIC,UAAU,CAAC,KAAK,CAAE;MAAC,MAAM,EAAE/B,YAAa;MAAC,MAAM,EAAE,CAAC;QAACoB,KAAK,EAAE,MAAM;QAAEC,IAAI,EAAE;MAAM,CAAC,EAAC;QAACD,KAAK,EAAE,UAAU;QAAEC,IAAI,EAAC;MAAU,CAAC,EAAC;QAACD,KAAK,EAAE,aAAa;QAAEC,IAAI,EAAC;MAAa,CAAC,EAAC;QAACD,KAAK,EAAC,YAAY;QAAEC,IAAI,EAAC;MAAY,CAAC,EAAC;QAACD,KAAK,EAAC,WAAW;QAAEC,IAAI,EAAC;MAAO,CAAC,CAAE;MAAC,QAAQ,EAAE;QAACA,IAAI,EAAC,EAAE;QAACC,QAAQ,EAAC,EAAE;QAACC,WAAW,EAAC,EAAE;QAACC,UAAU,EAAC,EAAE;QAACC,KAAK,EAAC;MAAE,CAAE;MAAC,UAAU,EAAC;IAAe;MAAA;MAAA;MAAA;IAAA,QAAE,gBACzW;MAAA,wBACD;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,sBAAsB;QAAC,OAAO,EAAE,MAAIM,UAAU,CAAC,IAAI,CAAE;QAAC,IAAI,EAAC,QAAQ;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAuB,eAC1H;QAAQ,IAAI,EAAC,QAAQ;QAAC,SAAS,EAAC,sBAAsB;QAAC,OAAO,EAAE,MAAIH,kBAAkB,CAAC,IAAI,CAAE;QAAE,IAAI,EAAC,KAAK;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAAgC;IAAA,gBACtI,eAGH;MAAK,SAAS,EAAE,oBAAoB;MAAC,OAAO,EAAG,MAAInB,eAAe,CAAC,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO,eAC9E;MAAK,SAAS,EAAE,oBAAoB;MAAC,OAAO,EAAG,MAAIA,eAAe,CAAC,CAAC;IAAE;MAAA;MAAA;MAAA;IAAA,QAAO;EAAA,gBAC1E;;EAaxB,IAAI;EAAA,QAI0BD,QAAQ;AAAA;AAAA,KAJtCC,IAAI;AAgOV,eAAeA,IAAI;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/Book.js\",\n  _s = $RefreshSig$();\nimport cover from './sprites/OpenBook1.png';\nimport page from './sprites/OpenBookPages.png';\nimport { useState, useEffect } from 'react';\nimport InputPage from './InputPage';\nimport Page from './Page';\nimport axios from 'axios';\nimport useAxios from './hooks/useAxios';\nimport './css/Book.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Book = _ref => {\n  _s();\n  let {\n    areReading,\n    bookId\n  } = _ref;\n  const [reqPages, pages, setPages] = useAxios([]);\n  const [pageNum, setPageNum] = useState([1, 2]); //maybe later keep track of what page they were on last and add it to the book in the db\n\n  useEffect(() => {\n    const getPages = async () => {\n      const res = await reqPages('get', `/books/${bookId}/pages`, 'pages');\n      if (res.data.length <= 0 && !areReading) {\n        addPage();\n      }\n    };\n    getPages();\n\n    // const getPages = async()=>{\n    //   const res = await axios.get(`/books/${bookId}/pages`);\n    //   if(res.data.pages.length>0){\n    //     setPages((n)=> n= res.data.pages);\n    //   }\n    //   else if(res.data.pages.length<=0 && !areReading){\n    //     addPage();\n    //   }\n    //\n    // }\n    // getPages();\n  }, []);\n\n  //\n  // useEffect(()=>{\n  // const getPages = async()=>{\n  //\n  //\n  // }\n  // getPages();\n  // },[pages])\n  //\n\n  const updatePage = async (text, pageId) => {\n    let res = await axios.patch(`/books/${bookId}/pages/${pageId}`, {\n      text: text\n    });\n    console.log(res.data.id);\n    if (res.data.id) {\n      // return res.data;\n      setPages(n => n = pages.map(page => page.id === res.data.id ? res.data : page));\n    }\n  };\n\n  /// if text is different update them\n\n  //change the page num\n\n  //update the page num\n\n  //this should cause a rerender and update the input to show the correct pages\n\n  const changePage = async (page, num) => {\n    if (page.text != pages[pageNum[0] - 1].text) {\n      await updatePage(page.text, pages[pageNum[0] - 1].id);\n    }\n    if (page.text2) {\n      if (page.text2 != pages[pageNum[1] - 1].text) {\n        await updatePage(page.text2, pages[pageNum[1] - 1].id);\n      }\n    }\n    if (pageNum[1] + num > pages.length) {\n      if (!areReading) {\n        await addPage();\n        setPages(n => n = [pageNum[0] + num, pageNum[1] + num]);\n      }\n    } else if (pageNum[0] + num > 0) {\n      setPages(n => n = [pageNum[0] + num, pageNum[1] + num]);\n    }\n  };\n  const addPage = async data => {\n    console.log('add page data', data);\n    reqPages('post', `/books/${bookId}/pages`, 'pages', {\n      num_of_pages: 2,\n      page_num: pageNum[0]\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Book\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"Book_cover\",\n      src: cover,\n      alt: \"cover\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"Book_pages\",\n      src: page,\n      alt: \"pages\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 1\n    }, this), pages.length > 0 ? areReading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Page, {\n        pageNum: pageNum[0],\n        changePage: changePage,\n        text: pages[pageNum[0] - 1].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 5\n      }, this), \" \", /*#__PURE__*/_jsxDEV(Page, {\n        pageNum: pageNum[1],\n        changePage: changePage,\n        text: pages[pageNum[1] - 1].text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 90\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(InputPage, {\n        pageNum: pageNum[0],\n        changePage: changePage,\n        text: [pages[pageNum[0] - 1].text, pages[pageNum[1] - 1].text],\n        isTwoPages: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 5\n      }, this)\n    }, void 0, false) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 8\n  }, this);\n};\n_s(Book, \"umZI7R75ba9E+Qqp+nLruvPdSz4=\", false, function () {\n  return [useAxios];\n});\n_c = Book;\nexport default Book;\nvar _c;\n$RefreshReg$(_c, \"Book\");","map":{"version":3,"names":["cover","page","useState","useEffect","InputPage","Page","axios","useAxios","Book","areReading","bookId","reqPages","pages","setPages","pageNum","setPageNum","getPages","res","data","length","addPage","updatePage","text","pageId","patch","console","log","id","n","map","changePage","num","text2","num_of_pages","page_num"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/Book.js"],"sourcesContent":["import cover from './sprites/OpenBook1.png'\nimport page from './sprites/OpenBookPages.png'\nimport {useState,useEffect} from 'react';\nimport InputPage from './InputPage'\nimport Page from './Page'\nimport axios from 'axios';\nimport useAxios from './hooks/useAxios';\nimport './css/Book.css';\nconst Book =({areReading,bookId})=>{\n\nconst [reqPages,pages,setPages]=useAxios([]);\nconst [pageNum,setPageNum]=useState([1,2]);//maybe later keep track of what page they were on last and add it to the book in the db\n\n\nuseEffect(()=>{\n  const getPages = async()=>{\n    const res = await reqPages('get',`/books/${bookId}/pages`,'pages');\n     if(res.data.length<=0 && !areReading){\n      addPage();\n    }\n\n  }\n  getPages();\n\n\n\n// const getPages = async()=>{\n//   const res = await axios.get(`/books/${bookId}/pages`);\n//   if(res.data.pages.length>0){\n//     setPages((n)=> n= res.data.pages);\n//   }\n//   else if(res.data.pages.length<=0 && !areReading){\n//     addPage();\n//   }\n//\n// }\n// getPages();\n},[])\n\n\n//\n// useEffect(()=>{\n// const getPages = async()=>{\n//\n//\n// }\n// getPages();\n// },[pages])\n//\n\n\nconst updatePage=async(text,pageId)=>{\n  let res = await axios.patch(`/books/${bookId}/pages/${pageId}`,{text:text});\n  console.log(res.data.id);\n  if(res.data.id){\n    // return res.data;\n   setPages((n)=> n= pages.map(page=> page.id === res.data.id? res.data: page));\n  }\n}\n\n\n/// if text is different update them\n\n//change the page num\n\n//update the page num\n\n//this should cause a rerender and update the input to show the correct pages\n\n\n\nconst changePage = async(page,num)=>{\n\n  if(page.text != pages[pageNum[0]-1].text){\n    await updatePage(page.text,pages[pageNum[0]-1].id);\n  }\n\n  if(page.text2){\n    if(page.text2 != pages[pageNum[1]-1].text){\n      await updatePage(page.text2,pages[pageNum[1]-1].id);\n    }\n  }\n\n  if(pageNum[1]+num > pages.length){\n    if(!areReading){\n      await addPage();\n        setPages((n)=> n=[pageNum[0]+num,pageNum[1]+num]);\n    }\n  }\n  else if(pageNum[0]+num > 0){\n      setPages((n)=> n=[pageNum[0]+num,pageNum[1]+num]);\n  }\n}\n\n\n\nconst addPage =async(data)=>{\n  console.log('add page data',data);\n   reqPages('post',`/books/${bookId}/pages`,'pages',{num_of_pages:2,page_num:pageNum[0]});\n}\n\n\nreturn <div className ='Book'>\n\n<img className ='Book_cover' src={cover} alt=\"cover\"/>\n<img className ='Book_pages' src={page} alt=\"pages\"/>\n\n\n{\n  pages.length>0?\n    areReading?\n    <>\n    <Page pageNum={pageNum[0]} changePage={changePage} text={pages[pageNum[0]-1].text}/> <Page pageNum={pageNum[1]} changePage={changePage} text={pages[pageNum[1]-1].text}/>\n    </>\n    : <>\n    <InputPage pageNum={pageNum[0]} changePage={changePage} text={[pages[pageNum[0]-1].text,pages[pageNum[1]-1].text]} isTwoPages={true}/>\n    </>\n  : null\n}\n\n\n</div>\n}\n\nexport default Book;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
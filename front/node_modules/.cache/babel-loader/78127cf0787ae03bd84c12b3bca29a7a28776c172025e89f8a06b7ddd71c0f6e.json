{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/notes/PlaceBook.js\",\n  _s = $RefreshSig$();\nimport Place from \"./Place\";\nimport PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport noteBook from \"../sprites/notes1.png\";\nimport useAxios from \"../hooks/useAxios\";\n\n//shows all the places for a book\n//lets you look at just one place\n//you can flip between places\n//you can add edit or delete a place\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlaceBook = _ref => {\n  _s();\n  let {\n    bookId\n  } = _ref;\n  const [reqPlaces, places, setPlaces] = useAxios([], true);\n  const [currPlace, setCurrPlace] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n\n  //gets all the places for a book\n  useEffect(() => {\n    reqPlaces(\"get\", `/books/${bookId}/places`, \"places\");\n  }, []);\n\n  //changes the current place so you can flip between places\n  const changePlace = num => {\n    let newPlace = currPlace ? currPlace + num : num;\n    if (newPlace < 0) newPlace = null;\n    if (newPlace > places.length) newPlace = 0;\n    setCurrPlace(newPlace);\n  };\n\n  //adds a place\n  const addPlace = async data => {\n    reqPlaces(\"post\", `/books/${bookId}/places`, \"place\", data);\n  };\n\n  //deletes a place\n  const deletePlace = async placeId => {\n    const res = await reqPlaces(\"delete\", `/books/${bookId}/places/${placeId}`);\n    if (res.message === \"Deleted!\") {\n      //if you are on that place page it changes it to the place before the current one\n      if (currPlace) {\n        if (places[currPlace - 1].id === placeId) {\n          changePlace(-1);\n        }\n      }\n      let updatedPlaces = places.filter(place => {\n        if (place.id !== placeId) return place;\n      });\n      if (!updatedPlaces[0]) updatedPlaces = [];\n      setPlaces(() => updatedPlaces);\n    }\n  };\n\n  //edits a place\n  const editPlace = async data => {\n    const placeId = places[currPlace - 1].id;\n    reqPlaces(\"patch\", `/books/${bookId}/places/${placeId}`, \"place\", data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: noteBook,\n      alt: \"NoteBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), currPlace && editForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setEditForm(false),\n      submit: editPlace,\n      inputs: [{\n        title: \"Name\",\n        name: \"name\"\n      }, {\n        title: \"Description\",\n        name: \"description\"\n      }, {\n        title: \"Extra info\",\n        name: \"extra_info\"\n      }, {\n        title: \"Public\",\n        name: \"is_public\",\n        type: \"checkbox\"\n      }],\n      initData: {\n        name: places[currPlace - 1].name,\n        description: places[currPlace - 1].description,\n        extra_info: places[currPlace - 1].extra_info,\n        is_public: places[currPlace - 1].is_public\n      },\n      submitText: \"Edit Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: [currPlace ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Table of Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 29\n      }, this), currPlace && places.length > 0 ? /*#__PURE__*/_jsxDEV(Place, {\n        handleClick: () => setEditForm(true),\n        place: places[currPlace - 1],\n        deletePlace: deletePlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this) : places.map((place, inx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CharLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => changePlace(inx + 1),\n          name: \"button\",\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deletePlace(place.id),\n          name: \"button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, place.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: addPlace,\n      inputs: [{\n        title: \"Name\",\n        name: \"name\"\n      }, {\n        title: \"Description\",\n        name: \"description\"\n      }, {\n        title: \"Extra info\",\n        name: \"extra_info\"\n      }, {\n        title: \"Public\",\n        name: \"is_public\",\n        type: \"checkbox\"\n      }],\n      initData: {\n        name: \"\",\n        description: \"\",\n        extra_info: \"\",\n        is_public: false\n      },\n      submitText: \"Add Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Back\",\n      onClick: () => changePlace(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Next\",\n      onClick: () => changePlace(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PlaceBook, \"JrJ9e9ESsfzuDO6KYJolwSAzGK8=\", false, function () {\n  return [useAxios];\n});\n_c = PlaceBook;\nexport default PlaceBook;\nvar _c;\n$RefreshReg$(_c, \"PlaceBook\");","map":{"version":3,"names":["Place","PopUpForm","useState","useEffect","noteBook","useAxios","PlaceBook","bookId","reqPlaces","places","setPlaces","currPlace","setCurrPlace","addForm","setAddForm","editForm","setEditForm","changePlace","num","newPlace","length","addPlace","data","deletePlace","placeId","res","message","id","updatedPlaces","filter","place","editPlace","title","name","type","description","extra_info","is_public","map","inx"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/notes/PlaceBook.js"],"sourcesContent":["import Place from \"./Place\";\nimport PopUpForm from \"../forms/PopUpForm\";\n\nimport { useState, useEffect } from \"react\";\n\nimport noteBook from \"../sprites/notes1.png\";\nimport useAxios from \"../hooks/useAxios\";\n\n//shows all the places for a book\n//lets you look at just one place\n//you can flip between places\n//you can add edit or delete a place\nconst PlaceBook = ({ bookId }) => {\n  const [reqPlaces, places, setPlaces] = useAxios([], true);\n  const [currPlace, setCurrPlace] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n\n\n  //gets all the places for a book\n  useEffect(() => {\n    reqPlaces(\"get\", `/books/${bookId}/places`, \"places\");\n  }, []);\n\n  //changes the current place so you can flip between places\n  const changePlace = (num) => {\n    let newPlace = currPlace ? currPlace + num : num;\n    if (newPlace < 0) newPlace = null;\n    if (newPlace > places.length) newPlace = 0;\n    setCurrPlace(newPlace);\n  };\n\n  //adds a place\n  const addPlace = async (data) => {\n    reqPlaces(\"post\", `/books/${bookId}/places`, \"place\", data);\n  };\n\n  //deletes a place\n  const deletePlace = async (placeId) => {\n    const res = await reqPlaces(\"delete\", `/books/${bookId}/places/${placeId}`);\n\n    if (res.message === \"Deleted!\") {\n      //if you are on that place page it changes it to the place before the current one\n      if (currPlace) {\n        if (places[currPlace - 1].id === placeId) {\n          changePlace(-1);\n        }\n      }\n      let updatedPlaces = places.filter((place) => {\n        if (place.id !== placeId) return place;\n      });\n      if (!updatedPlaces[0]) updatedPlaces = [];\n      setPlaces(() => (updatedPlaces));\n    }\n  };\n\n  //edits a place\n  const editPlace = async (data) => {\n    const placeId = places[currPlace - 1].id;\n    reqPlaces(\"patch\", `/books/${bookId}/places/${placeId}`, \"place\", data);\n  };\n\n  return (\n    <>\n      <img className=\"CharacterBook_Image\" src={noteBook} alt=\"NoteBook\" />\n\n      {currPlace && editForm ? (\n        <PopUpForm\n          closeForm={() => setEditForm(false)}\n          submit={editPlace}\n          inputs={[\n            { title: \"Name\", name: \"name\" },\n            { title: \"Description\", name: \"description\" },\n            { title: \"Extra info\", name: \"extra_info\" },\n            { title: \"Public\", name: \"is_public\", type: \"checkbox\" },\n          ]}\n          initData={{\n            name: places[currPlace - 1].name,\n            description: places[currPlace - 1].description,\n            extra_info: places[currPlace - 1].extra_info,\n            is_public: places[currPlace - 1].is_public,\n          }}\n          submitText=\"Edit Place\"\n        />\n      ) : null}\n\n      <div className=\"CharacterBook\">\n        {currPlace ? null : <h3>Table of Contents</h3>}\n\n        {currPlace && places.length > 0 ? (\n          <Place\n            handleClick={() => setEditForm(true)}\n            place={places[currPlace - 1]}\n            deletePlace={deletePlace}\n          />\n        ) : (\n          places.map((place, inx) => (\n            <div className=\"CharLink\" key={place.id}>\n              <button\n                type=\"button\"\n                onClick={() => changePlace(inx + 1)}\n                name=\"button\"\n              >\n                {place.name}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => deletePlace(place.id)}\n                name=\"button\"\n              >\n                X\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {addForm ? (\n        <PopUpForm\n          closeForm={() => setAddForm(false)}\n          submit={addPlace}\n          inputs={[\n            { title: \"Name\", name: \"name\" },\n            { title: \"Description\", name: \"description\" },\n            { title: \"Extra info\", name: \"extra_info\" },\n            { title: \"Public\", name: \"is_public\", type: \"checkbox\" },\n          ]}\n          initData={{\n            name: \"\",\n            description: \"\",\n            extra_info: \"\",\n            is_public: false,\n          }}\n          submitText=\"Add Place\"\n        />\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddForm(true)}\n            name=\"button\"\n          >\n            New place\n          </button>\n        </>\n      )}\n\n      <div className=\"CharacterBook_Back\" onClick={() => changePlace(-1)}></div>\n      <div className=\"CharacterBook_Next\" onClick={() => changePlace(1)}></div>\n    </>\n  );\n};\nexport default PlaceBook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
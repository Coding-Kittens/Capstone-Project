{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/notes/NoteBook.js\",\n  _s = $RefreshSig$();\nimport PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport noteBook from \"../sprites/notes1.png\";\nimport axios from \"axios\";\nimport useAxios from \"../hooks/useAxios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"./NotePage\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteBook = _ref => {\n  _s();\n  let {\n    bookId,\n    username\n  } = _ref;\n  const [reqNotes, notes, setNotes] = useState([], true);\n  const [currNote, setCurrNote] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n  useEffect(() => {\n    reqNotes('get', `/books/${bookId}/notes`, 'notes');\n    // const getNotes = async () => {\n    //\n    //   const res = await axios.get(`/books/${bookId}/notes`);\n    //   if (res.data.notes.length > 0) {\n    //     setNotes((n) => (n = res.data.notes));\n    //   }\n    // };\n    // getNotes();\n  }, []);\n  const showContents = () => {\n    setCurrNote(null);\n  };\n  const changeNote = num => {\n    let newNote = currNote ? currNote + num : num;\n    if (newNote < 0) newNote = null;\n    if (newNote > notes.length) newNote = 0;\n    setCurrNote(newNote);\n  };\n  const addNote = async data => {\n    const res = await axios.post(`/books/${bookId}/notes`, data);\n    if (res.data.notes) {\n      setNotes(n => n = [...notes, res.data.notes]);\n    }\n  };\n  const deleteNote = async noteId => {\n    const res = await axios.delete(`/books/${bookId}/notes/${noteId}`);\n    console.log(res);\n    if (res.data.message === \"Deleted!\") {\n      if (currNote) {\n        if (notes[currNote - 1].id === noteId) {\n          changeNote(-1);\n        }\n      }\n      let updatedNotes = notes.map(note => {\n        if (note.id != noteId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(n => n = updatedNotes);\n    }\n  };\n  const editNote = async data => {\n    const noteId = notes[currNote - 1].id;\n    const res = await axios.patch(`/notes/${noteId}`, data);\n    if (res.data.notes) {\n      setNotes(n => n = notes.map(note => note.id != noteId ? note : res.data.notes));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: noteBook,\n      alt: \"NoteBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), editForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setEditForm(false),\n      submit: editNote,\n      inputs: [{\n        title: \"title\",\n        name: \"title\"\n      }, {\n        title: \"text\",\n        name: \"text\"\n      }],\n      initData: {\n        title: \"\",\n        text: \"\"\n      },\n      submitText: \"Edit Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: [currNote ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Table of Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 28\n      }, this), currNote && notes.length > 0 ? /*#__PURE__*/_jsxDEV(NotePage, {\n        handleClick: () => setEditForm(true),\n        note: notes[currNote - 1],\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this) : notes.map((note, inx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CharLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => changeNote(inx + 1),\n          name: \"button\",\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteNote(note.id),\n          name: \"button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: addNote,\n      inputs: [{\n        title: \"title\",\n        name: \"title\"\n      }, {\n        title: \"text\",\n        name: \"text\"\n      }],\n      initData: {\n        title: \"\",\n        text: \"\"\n      },\n      submitText: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Back\",\n      onClick: () => changeNote(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 156,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Next\",\n      onClick: () => changeNote(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 157,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NoteBook, \"d9MPQnq/OSHP1ModiBghNwadlHU=\");\n_c = NoteBook;\nexport default NoteBook;\nvar _c;\n$RefreshReg$(_c, \"NoteBook\");","map":{"version":3,"names":["PopUpForm","useState","useEffect","useToggle","noteBook","axios","useAxios","NotePage","NoteBook","bookId","username","reqNotes","notes","setNotes","currNote","setCurrNote","addForm","setAddForm","editForm","setEditForm","addExistingForm","setAddExistingForm","showContents","changeNote","num","newNote","length","addNote","data","res","post","n","deleteNote","noteId","delete","console","log","message","id","updatedNotes","map","note","editNote","patch","title","name","text","inx"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/notes/NoteBook.js"],"sourcesContent":["import PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport noteBook from \"../sprites/notes1.png\";\n\nimport axios from \"axios\";\n\nimport useAxios from \"../hooks/useAxios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"./NotePage\";\n\nconst NoteBook = ({ bookId, username }) => {\n  const [reqNotes,notes, setNotes] = useState([],true);\n  const [currNote, setCurrNote] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n\n  useEffect(() => {\n    reqNotes('get',`/books/${bookId}/notes`,'notes');\n    // const getNotes = async () => {\n    //\n    //   const res = await axios.get(`/books/${bookId}/notes`);\n    //   if (res.data.notes.length > 0) {\n    //     setNotes((n) => (n = res.data.notes));\n    //   }\n    // };\n    // getNotes();\n  }, []);\n\n  const showContents = () => {\n    setCurrNote(null);\n  };\n\n  const changeNote = (num) => {\n    let newNote = currNote ? currNote + num : num;\n    if (newNote < 0) newNote = null;\n    if (newNote > notes.length) newNote = 0;\n    setCurrNote(newNote);\n  };\n\n  const addNote = async (data) => {\n    const res = await axios.post(`/books/${bookId}/notes`, data);\n    if (res.data.notes) {\n      setNotes((n) => (n = [...notes, res.data.notes]));\n    }\n  };\n\n  const deleteNote = async (noteId) => {\n    const res = await axios.delete(`/books/${bookId}/notes/${noteId}`);\n    console.log(res);\n    if (res.data.message === \"Deleted!\") {\n      if (currNote) {\n        if (notes[currNote-1].id === noteId) {\n          changeNote(-1);\n        }\n      }\n      let updatedNotes = notes.map((note) => {\n        if (note.id != noteId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes((n) => (n = updatedNotes));\n    }\n  };\n\n  const editNote = async (data) => {\n    const noteId = notes[currNote-1].id;\n    const res = await axios.patch(`/notes/${noteId}`, data);\n    if (res.data.notes) {\n      setNotes(\n        (n) =>\n          (n = notes.map((note) => (note.id != noteId ? note : res.data.notes)))\n      );\n    }\n  };\n\n  return (\n    <>\n      <img className=\"CharacterBook_Image\" src={noteBook} alt=\"NoteBook\" />\n\n      {editForm ? (\n        <PopUpForm\n          closeForm={() => setEditForm(false)}\n          submit={editNote}\n          inputs={[\n            { title: \"title\", name: \"title\" },\n            { title: \"text\", name: \"text\" },\n          ]}\n          initData={{\n            title: \"\",\n            text: \"\",\n          }}\n          submitText=\"Edit Note\"\n        />\n      ) : null}\n\n      <div className=\"CharacterBook\">\n        {currNote ? null : <h3>Table of Contents</h3>}\n\n        {currNote && notes.length > 0 ? (\n          <NotePage\n            handleClick={() => setEditForm(true)}\n            note={notes[currNote-1]}\n            deleteNote={deleteNote}\n          />\n        ) : (\n          notes.map((note, inx) => (\n            <div className=\"CharLink\" key={note.id}>\n              <button\n                type=\"button\"\n                onClick={() => changeNote(inx+1)}\n                name=\"button\"\n              >\n                {note.title}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => deleteNote(note.id)}\n                name=\"button\"\n              >\n                X\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {addForm ? (\n        <PopUpForm\n          closeForm={() => setAddForm(false)}\n          submit={addNote}\n          inputs={[\n            { title: \"title\", name: \"title\" },\n            { title: \"text\", name: \"text\" },\n          ]}\n          initData={{\n            title: \"\",\n            text: \"\",\n          }}\n          submitText=\"Add Note\"\n        />\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddForm(true)}\n            name=\"button\"\n          >\n            New note\n          </button>\n        </>\n      )}\n\n\n      <div className ='CharacterBook_Back' onClick ={()=>changeNote(-1)}></div>\n      <div className ='CharacterBook_Next' onClick ={()=>changeNote(1)}></div>\n    </>\n  );\n};\nexport default NoteBook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
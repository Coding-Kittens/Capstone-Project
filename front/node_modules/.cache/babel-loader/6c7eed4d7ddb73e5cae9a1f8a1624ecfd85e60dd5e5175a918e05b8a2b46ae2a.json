{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/notes/NoteBook.js\",\n  _s = $RefreshSig$();\nimport PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport noteBook from \"../sprites/notes1.png\";\nimport useAxios from \"../hooks/useAxios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"./NotePage\";\n\n//shows all the notes for a book\n//lets you look at just one note\n//you can flip between notes\n//you can add edit or delete a note\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteBook = _ref => {\n  _s();\n  let {\n    bookId\n  } = _ref;\n  const [reqNotes, notes, setNotes] = useAxios([], true);\n  const [currNote, setCurrNote] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n\n  //gets all the notes for a book\n  useEffect(() => {\n    reqNotes(\"get\", `/books/${bookId}/notes`, \"notes\");\n  }, []);\n\n  //changes the current note so you can flip between notes\n  const changeNote = num => {\n    let newNote = currNote ? currNote + num : num;\n    if (newNote < 0) newNote = null;\n    if (newNote > notes.length) newNote = 0;\n    setCurrNote(newNote);\n  };\n\n  //adds a note\n  const addNote = data => {\n    reqNotes(\"post\", `/books/${bookId}/notes`, \"note\", data);\n  };\n\n  //deletes a note\n  const deleteNote = async noteId => {\n    const res = await reqNotes(\"delete\", `/books/${bookId}/notes/${noteId}`);\n    if (res.message === \"Deleted!\") {\n      //if you are on that note page it changes it to the note before the current one\n      if (currNote) {\n        if (notes[currNote - 1].id === noteId) {\n          changeNote(-1);\n        }\n      }\n      let updatedNotes = notes.filter(note => {\n        if (note.id != noteId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(() => updatedNotes);\n    }\n  };\n\n  //edits a note\n  const editNote = async data => {\n    const noteId = notes[currNote - 1].id;\n    reqNotes(\"patch\", `/notes/${noteId}`, \"note\", data);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: noteBook,\n      alt: \"NoteBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), currNote && editForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setEditForm(false),\n      submit: editNote,\n      inputs: [{\n        title: \"Title\",\n        name: \"title\"\n      }, {\n        title: \"Text\",\n        name: \"text\"\n      }],\n      initData: {\n        title: notes[currNote - 1].title,\n        text: notes[currNote - 1].text\n      },\n      submitText: \"Edit Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: [currNote ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Table of Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 28\n      }, this), currNote && notes.length > 0 ? /*#__PURE__*/_jsxDEV(NotePage, {\n        handleClick: () => setEditForm(true),\n        note: notes[currNote - 1],\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 11\n      }, this) : notes.map((note, inx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CharLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => changeNote(inx + 1),\n          name: \"button\",\n          children: note.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteNote(note.id),\n          name: \"button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 15\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: addNote,\n      inputs: [{\n        title: \"Title\",\n        name: \"title\"\n      }, {\n        title: \"Text\",\n        name: \"text\"\n      }],\n      initData: {\n        title: \"\",\n        text: \"\"\n      },\n      submitText: \"Add Note\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New note\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 11\n      }, this)\n    }, void 0, false), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Back\",\n      onClick: () => changeNote(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Next\",\n      onClick: () => changeNote(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(NoteBook, \"QpOUx4TrhoUVS/YReTJu2A6taoI=\", false, function () {\n  return [useAxios];\n});\n_c = NoteBook;\nexport default NoteBook;\nvar _c;\n$RefreshReg$(_c, \"NoteBook\");","map":{"version":3,"names":["PopUpForm","useState","useEffect","noteBook","useAxios","NotePage","jsxDEV","_jsxDEV","Fragment","_Fragment","NoteBook","_ref","_s","bookId","reqNotes","notes","setNotes","currNote","setCurrNote","addForm","setAddForm","editForm","setEditForm","changeNote","num","newNote","length","addNote","data","deleteNote","noteId","res","message","id","updatedNotes","filter","note","editNote","children","className","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","closeForm","submit","inputs","title","name","initData","text","submitText","handleClick","map","inx","type","onClick","_c","$RefreshReg$"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/notes/NoteBook.js"],"sourcesContent":["import PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\n\nimport noteBook from \"../sprites/notes1.png\";\nimport useAxios from \"../hooks/useAxios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"./NotePage\";\n\n//shows all the notes for a book\n//lets you look at just one note\n//you can flip between notes\n//you can add edit or delete a note\nconst NoteBook = ({ bookId}) => {\n  const [reqNotes, notes, setNotes] = useAxios([], true);\n  const [currNote, setCurrNote] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n\n\n  //gets all the notes for a book\n  useEffect(() => {\n    reqNotes(\"get\", `/books/${bookId}/notes`, \"notes\");\n  }, []);\n\n  //changes the current note so you can flip between notes\n  const changeNote = (num) => {\n    let newNote = currNote ? currNote + num : num;\n    if (newNote < 0) newNote = null;\n    if (newNote > notes.length) newNote = 0;\n    setCurrNote(newNote);\n  };\n\n  //adds a note\n  const addNote = (data) => {\n    reqNotes(\"post\", `/books/${bookId}/notes`, \"note\", data);\n  };\n\n  //deletes a note\n  const deleteNote = async (noteId) => {\n    const res = await reqNotes(\"delete\", `/books/${bookId}/notes/${noteId}`);\n    if (res.message === \"Deleted!\") {\n      //if you are on that note page it changes it to the note before the current one\n      if (currNote) {\n        if (notes[currNote - 1].id === noteId) {\n          changeNote(-1);\n        }\n      }\n      let updatedNotes = notes.filter((note) => {\n        if (note.id != noteId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(() => (updatedNotes));\n    }\n  };\n\n  //edits a note\n  const editNote = async (data) => {\n    const noteId = notes[currNote - 1].id;\n    reqNotes(\"patch\", `/notes/${noteId}`, \"note\", data);\n  };\n\n  return (\n    <>\n      <img className=\"CharacterBook_Image\" src={noteBook} alt=\"NoteBook\" />\n\n      {currNote && editForm ? (\n        <PopUpForm\n          closeForm={() => setEditForm(false)}\n          submit={editNote}\n          inputs={[\n            { title: \"Title\", name: \"title\" },\n            { title: \"Text\", name: \"text\" },\n          ]}\n          initData={{\n            title: notes[currNote - 1].title,\n            text: notes[currNote - 1].text,\n          }}\n          submitText=\"Edit Note\"\n        />\n      ) : null}\n\n      <div className=\"CharacterBook\">\n        {currNote ? null : <h3>Table of Contents</h3>}\n\n        {currNote && notes.length > 0 ? (\n          <NotePage\n            handleClick={() => setEditForm(true)}\n            note={notes[currNote - 1]}\n            deleteNote={deleteNote}\n          />\n        ) : (\n          notes.map((note, inx) => (\n            <div className=\"CharLink\" key={note.id}>\n              <button\n                type=\"button\"\n                onClick={() => changeNote(inx + 1)}\n                name=\"button\"\n              >\n                {note.title}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => deleteNote(note.id)}\n                name=\"button\"\n              >\n                X\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {addForm ? (\n        <PopUpForm\n          closeForm={() => setAddForm(false)}\n          submit={addNote}\n          inputs={[\n            { title: \"Title\", name: \"title\" },\n            { title: \"Text\", name: \"text\" },\n          ]}\n          initData={{\n            title: \"\",\n            text: \"\",\n          }}\n          submitText=\"Add Note\"\n        />\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddForm(true)}\n            name=\"button\"\n          >\n            New note\n          </button>\n        </>\n      )}\n\n      <div className=\"CharacterBook_Back\" onClick={() => changeNote(-1)}></div>\n      <div className=\"CharacterBook_Next\" onClick={() => changeNote(1)}></div>\n    </>\n  );\n};\nexport default NoteBook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
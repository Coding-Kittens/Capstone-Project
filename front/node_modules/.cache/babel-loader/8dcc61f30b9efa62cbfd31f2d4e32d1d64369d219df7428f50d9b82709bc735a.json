{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/books/InputPage.js\",\n  _s = $RefreshSig$();\nimport bookThemes from '../data/bookThemes.js';\nimport useFields from \"../hooks/useFields\";\nimport \"../css/InputPage.css\";\nimport { useEffect } from \"react\";\n\n//show the input textareas for the pages in a book\n//\n///takes:\n//the page or pages / witch is a list of objs with all the page info in it.\n//functions to change the page and save the page\n//if it is one or two pages, so later I can have books with only one page showing\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst InputPage = _ref => {\n  _s();\n  let {\n    changePage,\n    savePage,\n    page,\n    isTwoPages = true\n  } = _ref;\n  //sets the init val to be the page text\n  let text = page[0] ? page[0].text : \"\";\n  const init = {\n    text: text\n  };\n  if (isTwoPages) init[\"text2\"] = page[1] ? page[1].text : \"\";\n  const [inputPage, handleChange, resetpage, setPage] = useFields(init);\n\n  //sets the page text to be the init val\n  useEffect(() => {\n    if (inputPage) {\n      setPage(init);\n    }\n  }, [page]);\n\n  //calls changePage and passes the textarea data to it so it can save the pages\n  //also gives it a num that it should add to the current page num\n  const handleClick = num => {\n    changePage(num, inputPage);\n    resetpage();\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"InputPage\",\n    children: [page ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text\",\n        rows: \"23\",\n        cols: \"36\",\n        maxLength: \"997\",\n        value: inputPage.text,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this), isTwoPages ? /*#__PURE__*/_jsxDEV(\"textarea\", {\n        name: \"text2\",\n        rows: \"23\",\n        cols: \"33\",\n        maxLength: \"905\",\n        value: inputPage.text2,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pg1\",\n        children: page[0].page_num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), isTwoPages ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"pg2\",\n        children: page[1].page_num\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 25\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChangePageBack\",\n        onClick: () => handleClick(-2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"ChangePageNext\",\n        onClick: () => handleClick(2)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"InputPage_Save\",\n      type: \"button\",\n      onClick: () => savePage(inputPage),\n      children: \"Save\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n};\n_s(InputPage, \"WCN2V9a4VCgaQilqj7fhEhsCjIQ=\", false, function () {\n  return [useFields];\n});\n_c = InputPage;\nexport default InputPage;\nvar _c;\n$RefreshReg$(_c, \"InputPage\");","map":{"version":3,"names":["bookThemes","useFields","useEffect","jsxDEV","_jsxDEV","Fragment","_Fragment","InputPage","_ref","_s","changePage","savePage","page","isTwoPages","text","init","inputPage","handleChange","resetpage","setPage","handleClick","num","className","children","name","rows","cols","maxLength","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","text2","page_num","onClick","type","_c","$RefreshReg$"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/books/InputPage.js"],"sourcesContent":["import bookThemes from '../data/bookThemes.js';\nimport useFields from \"../hooks/useFields\";\nimport \"../css/InputPage.css\";\nimport { useEffect } from \"react\";\n\n//show the input textareas for the pages in a book\n//\n///takes:\n//the page or pages / witch is a list of objs with all the page info in it.\n//functions to change the page and save the page\n//if it is one or two pages, so later I can have books with only one page showing\nconst InputPage = ({ changePage, savePage, page, isTwoPages = true }) => {\n  //sets the init val to be the page text\n  let text = page[0] ? page[0].text : \"\";\n  const init = {\n    text: text,\n  };\n  if (isTwoPages) init[\"text2\"] = page[1] ? page[1].text : \"\";\n\n  const [inputPage, handleChange, resetpage, setPage] = useFields(init);\n\n  //sets the page text to be the init val\n  useEffect(() => {\n    if (inputPage) {\n      setPage(init);\n    }\n  }, [page]);\n\n  //calls changePage and passes the textarea data to it so it can save the pages\n  //also gives it a num that it should add to the current page num\n  const handleClick = (num) => {\n    changePage(num, inputPage);\n    resetpage();\n  };\n\n  return (\n    <div className=\"InputPage\">\n      {page ? (\n        <>\n          <textarea\n            name=\"text\"\n            rows=\"23\"\n            cols=\"36\"\n            maxLength=\"997\"\n            value={inputPage.text}\n            onChange={handleChange}\n          ></textarea>\n          {isTwoPages ? (\n            <textarea\n              name=\"text2\"\n              rows=\"23\"\n              cols=\"33\"\n              maxLength=\"905\"\n              value={inputPage.text2}\n              onChange={handleChange}\n            ></textarea>\n          ) : null}\n          <p className=\"pg1\">{page[0].page_num}</p>\n          {isTwoPages ? <p className=\"pg2\">{page[1].page_num}</p> : null}\n\n          <div className=\"ChangePageBack\" onClick={() => handleClick(-2)}></div>\n          <div className=\"ChangePageNext\" onClick={() => handleClick(2)}></div>\n        </>\n      ) : null}\n\n      <button\n        className=\"InputPage_Save\"\n        type=\"button\"\n        onClick={() => savePage(inputPage)}\n      >\n        Save\n      </button>\n    </div>\n  );\n};\nexport default InputPage;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
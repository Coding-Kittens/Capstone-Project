{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js\",\n  _s = $RefreshSig$();\nimport PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport axios from \"axios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from './Tab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookMark = _ref => {\n  _s();\n  let {\n    bookId,\n    username,\n    currPageId\n  } = _ref;\n  const [notes, setNotes] = useState([]);\n  const [currNote, setCurrNote] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n  useEffect(() => {\n    const getNotes = async () => {\n      const res = await axios.get(`/bookmarks/${bookId}`);\n      if (res.data.notes.length > 0) {\n        setNotes(n => n = res.data.notes);\n      }\n    };\n    getNotes();\n  }, []);\n  const showContents = () => {\n    setCurrNote(null);\n  };\n  const changeNote = num => {\n    let newNote = currNote ? currNote + num : num;\n    if (newNote < 0) newNote = null;\n    if (newNote > notes.length) newNote = 0;\n    setCurrNote(newNote);\n  };\n  const addNote = async (data, pageId) => {\n    const res = await axios.post(`/bookmarks/${bookId}/${pageId}`, data);\n    if (res.data.notes) {\n      setNotes(n => n = [...notes, res.data.notes]);\n    }\n  };\n  const deleteNote = async pageId => {\n    const res = await axios.delete(`/bookmarks/${bookId}/${pageId}`);\n    console.log(res);\n    if (res.data.message === \"Deleted!\") {\n      if (currNote) {\n        if (notes[currNote - 1].id === noteId) {\n          changeNote(-1);\n        }\n      }\n      let updatedNotes = notes.map(note => {\n        if (note.id != noteId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(n => n = updatedNotes);\n    }\n  };\n  const editNote = async (data, pageId) => {\n    const res = await axios.patch(`/bookmarks/${bookId}/${pageId}`, {\n      ...data,\n      page_id: currPageId,\n      book_id: bookId\n    });\n    if (res.data.notes) {\n      setNotes(n => n = notes.map(note => note.id != noteId ? note : res.data.notes));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: bookmark,\n      alt: \"bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 4\n    }, this), editForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setEditForm(false),\n      submit: editNote,\n      inputs: [{\n        title: \"text\",\n        name: \"text\"\n      }],\n      initData: {\n        text: \"\"\n      },\n      submitText: \"Edit\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: currNote && notes.length > 0 ? /*#__PURE__*/_jsxDEV(NotePage, {\n        handleClick: () => setEditForm(true),\n        note: notes[currNote - 1],\n        deleteNote: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 11\n      }, this) : notes.map((note, inx) => /*#__PURE__*/_jsxDEV(Tab, {\n        info: note,\n        page_num: currPageNum,\n        handleClick: changeNote,\n        editTab: editNote,\n        deleteTab: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: addNote,\n      inputs: [{\n        title: \"text\",\n        name: \"text\"\n      }],\n      initData: {\n        text: \"\"\n      },\n      submitText: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New Bookmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(BookMark, \"3Z6FY0OjBtsm4w9PuAqWMur9KAs=\");\n_c = BookMark;\nexport default BookMark;\nvar _c;\n$RefreshReg$(_c, \"BookMark\");","map":{"version":3,"names":["PopUpForm","useState","useEffect","useToggle","bookmark","axios","NotePage","Tab","BookMark","bookId","username","currPageId","notes","setNotes","currNote","setCurrNote","addForm","setAddForm","editForm","setEditForm","addExistingForm","setAddExistingForm","getNotes","res","get","data","length","n","showContents","changeNote","num","newNote","addNote","pageId","post","deleteNote","delete","console","log","message","id","noteId","updatedNotes","map","note","editNote","patch","page_id","book_id","title","name","text","inx","currPageNum"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js"],"sourcesContent":["import PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport axios from \"axios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from './Tab';\n\n\nconst BookMark = ({ bookId, username,currPageId}) => {\n\n\n  const [notes, setNotes] = useState([]);\n  const [currNote, setCurrNote] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n\n  useEffect(() => {\n    const getNotes = async () => {\n      const res = await axios.get(`/bookmarks/${bookId}`);\n      if (res.data.notes.length > 0) {\n        setNotes((n) => (n = res.data.notes));\n      }\n    };\n    getNotes();\n  }, []);\n\n  const showContents = () => {\n    setCurrNote(null);\n  };\n\n  const changeNote = (num) => {\n    let newNote = currNote ? currNote + num : num;\n    if (newNote < 0) newNote = null;\n    if (newNote > notes.length) newNote = 0;\n    setCurrNote(newNote);\n  };\n\n  const addNote = async (data,pageId) => {\n    const res = await axios.post(`/bookmarks/${bookId}/${pageId}`, data);\n    if (res.data.notes) {\n      setNotes((n) => (n = [...notes, res.data.notes]));\n    }\n  };\n\n  const deleteNote = async (pageId) => {\n    const res = await axios.delete(`/bookmarks/${bookId}/${pageId}`);\n    console.log(res);\n    if (res.data.message === \"Deleted!\") {\n      if (currNote) {\n        if (notes[currNote-1].id === noteId) {\n          changeNote(-1);\n        }\n      }\n      let updatedNotes = notes.map((note) => {\n        if (note.id != noteId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes((n) => (n = updatedNotes));\n    }\n  };\n\n  const editNote = async (data,pageId) => {\n    const res = await axios.patch(`/bookmarks/${bookId}/${pageId}`, {...data,page_id:currPageId,book_id: bookId});\n    if (res.data.notes) {\n      setNotes(\n        (n) =>\n          (n = notes.map((note) => (note.id != noteId ? note : res.data.notes)))\n      );\n    }\n  };\n\n\n\n  return (\n    <>\n   <img className=\"CharacterBook_Image\" src={bookmark} alt=\"bookmark\" />\n\n      {editForm ? (\n        <PopUpForm\n          closeForm={() => setEditForm(false)}\n          submit={editNote}\n          inputs={[\n            { title: \"text\", name: \"text\" },\n          ]}\n          initData={{\n            text: \"\",\n          }}\n          submitText=\"Edit\"\n        />\n      ) : null}\n\n\n      <div className=\"CharacterBook\">\n\n\n        {currNote && notes.length > 0 ? (\n          <NotePage\n            handleClick={() => setEditForm(true)}\n            note={notes[currNote-1]}\n            deleteNote={deleteNote}\n          />\n        ) : (\n          notes.map((note, inx) => (\n            <Tab info={note} page_num={currPageNum} handleClick={changeNote} editTab={editNote} deleteTab={deleteNote}/>\n          ))\n        )}\n      </div>\n\n\n\n      {addForm ? (\n        <PopUpForm\n          closeForm={() => setAddForm(false)}\n          submit={addNote}\n          inputs={[\n            { title: \"text\", name: \"text\" },\n          ]}\n          initData={{\n            text: \"\",\n          }}\n          submitText=\"Add\"\n        />\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddForm(true)}\n            name=\"button\"\n          >\n            New Bookmark\n          </button>\n        </>\n      )}\n\n    </>\n  );\n};\nexport default BookMark;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
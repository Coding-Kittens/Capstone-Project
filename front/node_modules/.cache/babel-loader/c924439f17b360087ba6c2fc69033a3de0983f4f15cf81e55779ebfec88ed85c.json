{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js\",\n  _s = $RefreshSig$();\nimport PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport useAxios from \"../hooks/useAxios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from \"./Tab\";\nimport '../css/BookMark.css';\n\n///shows all the bookmarks for a book and lets you add a new one\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookMark = _ref => {\n  _s();\n  let {\n    bookId,\n    username,\n    currPageId,\n    changePage\n  } = _ref;\n  const [reqNotes, notes, setNotes] = useAxios([], true);\n  const [currNote, setCurrNote] = useState(1);\n  const [addForm, setAddForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n  useEffect(() => {\n    reqNotes('get', `/bookmarks/${bookId}`, 'bookmarks');\n  }, []);\n  const addNote = (data, pageId) => {\n    reqNotes('post', `/bookmarks/${bookId}/${pageId}`, 'bookmark', data);\n  };\n  const deleteNote = async pageId => {\n    const res = await reqNotes('delete', `/bookmarks/${bookId}/${pageId}`);\n    if (res.message === \"Deleted!\") {\n      let updatedNotes = notes.filter(note => {\n        if (note.page_id !== pageId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(n => n = updatedNotes);\n    }\n  };\n  const editNote = (data, pageId) => {\n    reqNotes('patch', `/bookmarks/${bookId}/${pageId}`, 'bookmark', {\n      ...data,\n      page_id: currPageId,\n      book_id: bookId\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"BookMark_Image\",\n      src: bookmark,\n      alt: \"bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"BookMark\",\n      children: [notes.length > 0 && currPageId ? notes.map(note => /*#__PURE__*/_jsxDEV(Tab, {\n        info: note,\n        page_id: currPageId,\n        handleClick: () => changePage(note.page_num),\n        editTab: editNote,\n        deleteTab: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }, this)) : null, addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n        closeForm: () => setAddForm(false),\n        submit: data => addNote(data, currPageId),\n        inputs: [{\n          name: 'text',\n          title: 'Note'\n        }],\n        initData: {\n          text: \"\"\n        },\n        submitText: \"Add\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          className: \"BookMark_button\",\n          onClick: () => setAddForm(true),\n          name: \"button\",\n          children: \"New Bookmark\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, this)\n      }, void 0, false)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(BookMark, \"z9PYThMhNaFlKZVa7WRFU6hC8jI=\", false, function () {\n  return [useAxios];\n});\n_c = BookMark;\nexport default BookMark;\nvar _c;\n$RefreshReg$(_c, \"BookMark\");","map":{"version":3,"names":["PopUpForm","useState","useEffect","useToggle","bookmark","useAxios","NotePage","Tab","BookMark","bookId","username","currPageId","changePage","reqNotes","notes","setNotes","currNote","setCurrNote","addForm","setAddForm","addExistingForm","setAddExistingForm","addNote","data","pageId","deleteNote","res","message","updatedNotes","filter","note","page_id","n","editNote","book_id","length","map","page_num","name","title","text"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js"],"sourcesContent":["import PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport useAxios from \"../hooks/useAxios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from \"./Tab\";\nimport '../css/BookMark.css';\n\n///shows all the bookmarks for a book and lets you add a new one\nconst BookMark = ({ bookId, username, currPageId, changePage }) => {\n  const [reqNotes,notes, setNotes] = useAxios([],true);\n  const [currNote, setCurrNote] = useState(1);\n  const [addForm, setAddForm] = useState(false);\n\n  const [addExistingForm, setAddExistingForm] = useState(false);\n\n  useEffect(() => {\n    reqNotes('get',`/bookmarks/${bookId}`,'bookmarks');\n  }, []);\n\n\n  const addNote = (data, pageId) => {\n    reqNotes('post',`/bookmarks/${bookId}/${pageId}`,'bookmark',data);\n  };\n\n  const deleteNote = async (pageId) => {\n    const res = await reqNotes('delete',`/bookmarks/${bookId}/${pageId}`)\n    if (res.message === \"Deleted!\") {\n      let updatedNotes = notes.filter((note) => {\n        if (note.page_id !== pageId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes((n) => (n = updatedNotes));\n    }\n  };\n\n  const editNote = (data, pageId) => {\n    reqNotes('patch',`/bookmarks/${bookId}/${pageId}`,'bookmark',{\n      ...data,\n      page_id: currPageId,\n      book_id: bookId,\n    })\n  };\n\n  return (\n    <>\n      <img className=\"BookMark_Image\" src={bookmark} alt=\"bookmark\" />\n\n      <div className=\"BookMark\">\n        {notes.length > 0 && currPageId\n          ? notes.map((note) => (\n              <Tab\n                info={note}\n                page_id={currPageId}\n                handleClick={() => changePage(note.page_num)}\n                editTab={editNote}\n                deleteTab={deleteNote}\n              />\n            ))\n          : null}\n          \n          {addForm ? (\n            <PopUpForm\n              closeForm={() => setAddForm(false)}\n              submit={(data) => addNote(data, currPageId)}\n              inputs={[{name:'text',title:'Note'}]}\n              initData={{\n                text: \"\",\n              }}\n              submitText=\"Add\"\n            />\n          ) : (\n            <>\n              <button\n                type=\"button\"\n                className=\"BookMark_button\"\n                onClick={() => setAddForm(true)}\n                name=\"button\"\n              >\n                New Bookmark\n              </button>\n            </>\n          )}\n      </div>\n\n\n    </>\n  );\n};\nexport default BookMark;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
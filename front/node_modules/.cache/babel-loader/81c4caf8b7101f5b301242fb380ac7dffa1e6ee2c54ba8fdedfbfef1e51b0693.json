{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\n///makes axios calls and sets state for the data it returns\n//returns a function to make requests,the state, setState\n///\n//takes:\n//initalVal the initial value of the state\n//isList, if the state should be a list or just on value\n////\n///////if its a list it will set the State with the data coming back in a list with the state that is already there\n///////if not it will replace the state with the data coming back\n///\nconst useAxios = function (initalVal) {\n  _s();\n  let isList = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  const [state, setState] = useState(initalVal);\n  // const baseURL = process.env.REACT_APP_BASE_URL\n  const baseURL = 'http://localhost:5000';\n  //makes a request and returns the response\n  //takes:\n  //type or request 'get','post','patch',or 'delete'\n  //url\n  //key of the data thats returned like data['books']\n  //updateState, whether it should update the state or not\n  const request = async function (type, url, key, data) {\n    let updateState = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : true;\n    let res = '';\n    switch (type) {\n      case 'get':\n        res = await axios.get(`${baseURL}${url}`, {\n          withCredentials: true,\n          xsrfCookieName: 'session'\n        });\n        break;\n      case 'post':\n        res = await axios.post(`${baseURL}${url}`, {\n          ...data\n        }, {\n          withCredentials: true,\n          xsrfCookieName: 'session'\n        });\n        break;\n      case 'patch':\n        res = await axios.patch(`${baseURL}${url}`, {\n          ...data\n        }, {\n          withCredentials: true,\n          xsrfCookieName: 'session'\n        });\n        break;\n      case 'delete':\n        res = await axios.delete(`${baseURL}${url}`, {\n          withCredentials: true,\n          xsrfCookieName: 'session'\n        });\n        break;\n      default:\n        break;\n    }\n    console.log(res);\n    console.log(res.data[key]);\n    if (res.data[key]) {\n      if (!updateState) return res.data[key];\n      let newState;\n      if (isList) {\n        if (state.length > 0) {\n          newState = state.map(s => res.data[key].id === s.id ? res.data[key] : s);\n          if (type == 'post') {\n            newState = [...state, res.data[key]];\n          }\n        } else {\n          if (Array.isArray(res.data[key])) {\n            newState = [...res.data[key]];\n          } else {\n            newState = [res.data[key]];\n          }\n        }\n      } else {\n        newState = res.data[key];\n      }\n      setState(newState);\n      return {\n        data: res.data[key]\n      };\n    } else if (res.data.message) {\n      if (res.status != 201 && res.status != 200) setState(initalVal);\n      return res.data;\n    }\n    if (res.status === 404) {\n      return {\n        message: `No ${key} found!`\n      };\n    }\n  };\n  return [request, state, setState];\n};\n_s(useAxios, \"Y4ET7KUk7wYObJYpeB+O5979uE8=\");\nexport default useAxios;","map":{"version":3,"names":["useState","axios","useAxios","initalVal","_s","isList","arguments","length","undefined","state","setState","baseURL","request","type","url","key","data","updateState","res","get","withCredentials","xsrfCookieName","post","patch","delete","console","log","newState","map","s","id","Array","isArray","message","status"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/hooks/useAxios.js"],"sourcesContent":["\nimport { useState } from \"react\";\nimport axios from \"axios\";\n\n\n///makes axios calls and sets state for the data it returns\n//returns a function to make requests,the state, setState\n///\n//takes:\n//initalVal the initial value of the state\n//isList, if the state should be a list or just on value\n////\n///////if its a list it will set the State with the data coming back in a list with the state that is already there\n///////if not it will replace the state with the data coming back\n///\nconst useAxios=(initalVal,isList=false)=>{\n  const [state,setState] = useState(initalVal)\n// const baseURL = process.env.REACT_APP_BASE_URL\nconst baseURL = 'http://localhost:5000';\n//makes a request and returns the response\n//takes:\n//type or request 'get','post','patch',or 'delete'\n//url\n//key of the data thats returned like data['books']\n//updateState, whether it should update the state or not\n  const request=async(type,url,key,data,updateState=true)=>{\n    let res='';\n\n    switch (type){\n      case 'get':\n        res = await axios.get(`${baseURL}${url}`,{withCredentials: true, xsrfCookieName:'session'});\n        break;\n        case 'post':\n       res = await axios.post(`${baseURL}${url}`,{...data},{withCredentials: true, xsrfCookieName:'session'});\n          break;\n          case 'patch':\n             res = await axios.patch(`${baseURL}${url}`,{...data},{withCredentials: true, xsrfCookieName:'session'});\n            break;\n            case 'delete':\n             res = await axios.delete(`${baseURL}${url}`,{withCredentials: true, xsrfCookieName:'session'});\n              break;\n      default:\n      break;\n    }\nconsole.log(res);\nconsole.log(res.data[key]);\n    if(res.data[key]){\n      if(!updateState) return res.data[key];\n\n      let newState;\n      if(isList){\n        if(state.length>0){\n            newState = state.map(s => res.data[key].id === s.id? res.data[key]:s)\n\n            if(type=='post'){\n              newState =[...state,res.data[key]];\n            }\n        }\n        else {\n          if(Array.isArray(res.data[key])){\n            newState =[...res.data[key]];\n          }else{\n            newState =[res.data[key]];\n          }\n        }\n\n      }else{\n        newState =res.data[key];\n      }\n\n    setState(newState);\n    return {data: res.data[key]}\n\n    }\n    else if(res.data.message){\n      if(res.status != 201 && res.status != 200)setState(initalVal);\n      return res.data;\n    }\n    if(res.status === 404){\n      return {message:`No ${key} found!`};\n    }\n  }\n\nreturn [request,state,setState];\n}\n\n\nexport default useAxios;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/pages/WritingPage.js\",\n  _s = $RefreshSig$();\nimport Book from \"../books/Book\";\nimport NoteBook from \"../notes/NoteBook\";\nimport CharacterBook from \"../notes/CharacterBook\";\nimport PlaceBook from \"../notes/PlaceBook\";\nimport \"../css/WritingPage.css\";\nimport useToggle from \"../hooks/useToggle\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport closedBook from \"../sprites/BookMedival.png\";\nimport useAxios from \"../hooks/useAxios\";\n\n//show the page for writing a book\n//shows btns to show the character, place, and note books\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst WritingPage = () => {\n  _s();\n  const {\n    id\n  } = useParams();\n  const [reqBook, book] = useAxios(null);\n\n  //gets the book\n  useEffect(() => {\n    reqBook(\"get\", `/books/${id}`, \"book\");\n  }, []);\n  const [isOpen, toggleIsOpen] = useToggle(false);\n  const [isPlaces, toggleIsPlaces] = useToggle(false);\n  const [isNotes, toggleIsNotes] = useToggle(false);\n  const [isChars, toggleIsChars] = useToggle(false);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [isOpen ? /*#__PURE__*/_jsxDEV(Book, {\n      bookId: id,\n      areReading: false\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"WritingPage_closedBook\",\n      src: closedBook,\n      alt: \"closedBook\",\n      onClick: toggleIsOpen\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }, this), book ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toggleIsChars,\n        className: \"WritingPage_charBook\",\n        children: \"Characters\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toggleIsPlaces,\n        className: \"WritingPage_placeBook\",\n        children: \"Places\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: toggleIsNotes,\n        className: \"WritingPage_noteBook\",\n        children: \"Notes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, isPlaces ? /*#__PURE__*/_jsxDEV(PlaceBook, {\n      bookId: id,\n      username: book.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 19\n    }, this) : null, isChars ? /*#__PURE__*/_jsxDEV(CharacterBook, {\n      bookId: id,\n      username: book.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 18\n    }, this) : null, isNotes ? /*#__PURE__*/_jsxDEV(NoteBook, {\n      bookId: id,\n      username: book.username\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 18\n    }, this) : null]\n  }, void 0, true);\n};\n_s(WritingPage, \"MLqp4O3CgN7USGDdXO4erui4kl4=\", false, function () {\n  return [useParams, useAxios, useToggle, useToggle, useToggle, useToggle];\n});\n_c = WritingPage;\nexport default WritingPage;\nvar _c;\n$RefreshReg$(_c, \"WritingPage\");","map":{"version":3,"names":["Book","NoteBook","CharacterBook","PlaceBook","useToggle","useParams","useState","useEffect","closedBook","useAxios","WritingPage","id","reqBook","book","isOpen","toggleIsOpen","isPlaces","toggleIsPlaces","isNotes","toggleIsNotes","isChars","toggleIsChars","username"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/pages/WritingPage.js"],"sourcesContent":["import Book from \"../books/Book\";\nimport NoteBook from \"../notes/NoteBook\";\nimport CharacterBook from \"../notes/CharacterBook\";\nimport PlaceBook from \"../notes/PlaceBook\";\nimport \"../css/WritingPage.css\";\nimport useToggle from \"../hooks/useToggle\";\nimport { useParams } from \"react-router-dom\";\nimport { useState, useEffect } from \"react\";\nimport closedBook from \"../sprites/BookMedival.png\";\nimport useAxios from \"../hooks/useAxios\";\n\n//show the page for writing a book\n//shows btns to show the character, place, and note books\nconst WritingPage = () => {\n  const { id } = useParams();\n\n  const [reqBook, book] = useAxios(null);\n\n  //gets the book\n  useEffect(() => {\n    reqBook(\"get\", `/books/${id}`, \"book\");\n  }, []);\n\n  const [isOpen, toggleIsOpen] = useToggle(false);\n  const [isPlaces, toggleIsPlaces] = useToggle(false);\n  const [isNotes, toggleIsNotes] = useToggle(false);\n  const [isChars, toggleIsChars] = useToggle(false);\n\n  return (\n    <>\n      {isOpen ? (\n        <Book bookId={id} areReading={false} />\n      ) : (\n        <img\n          className=\"WritingPage_closedBook\"\n          src={closedBook}\n          alt=\"closedBook\"\n          onClick={toggleIsOpen}\n        />\n      )}\n      {book ? (\n        <>\n          <button\n            type=\"button\"\n            onClick={toggleIsChars}\n            className=\"WritingPage_charBook\"\n          >\n            Characters\n          </button>\n          <button\n            type=\"button\"\n            onClick={toggleIsPlaces}\n            className=\"WritingPage_placeBook\"\n          >\n            Places\n          </button>\n          <button\n            type=\"button\"\n            onClick={toggleIsNotes}\n            className=\"WritingPage_noteBook\"\n          >\n            Notes\n          </button>\n        </>\n      ) : null}\n\n      {isPlaces ? <PlaceBook bookId={id} username={book.username} /> : null}\n\n      {isChars ? <CharacterBook bookId={id} username={book.username} /> : null}\n      {isNotes ? <NoteBook bookId={id} username={book.username} /> : null}\n    </>\n  );\n};\nexport default WritingPage;\n"],"mappings":";;AAAA,OAAOA,IAAI,MAAM,eAAe;AAChC,OAAOC,QAAQ,MAAM,mBAAmB;AACxC,OAAOC,aAAa,MAAM,wBAAwB;AAClD,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,OAAO,wBAAwB;AAC/B,OAAOC,SAAS,MAAM,oBAAoB;AAC1C,SAASC,SAAS,QAAQ,kBAAkB;AAC5C,SAASC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,UAAU,MAAM,4BAA4B;AACnD,OAAOC,QAAQ,MAAM,mBAAmB;;AAExC;AACA;AAAA;AAAA;AACA,MAAMC,WAAW,GAAG,MAAM;EAAA;EACxB,MAAM;IAAEC;EAAG,CAAC,GAAGN,SAAS,EAAE;EAE1B,MAAM,CAACO,OAAO,EAAEC,IAAI,CAAC,GAAGJ,QAAQ,CAAC,IAAI,CAAC;;EAEtC;EACAF,SAAS,CAAC,MAAM;IACdK,OAAO,CAAC,KAAK,EAAG,UAASD,EAAG,EAAC,EAAE,MAAM,CAAC;EACxC,CAAC,EAAE,EAAE,CAAC;EAEN,MAAM,CAACG,MAAM,EAAEC,YAAY,CAAC,GAAGX,SAAS,CAAC,KAAK,CAAC;EAC/C,MAAM,CAACY,QAAQ,EAAEC,cAAc,CAAC,GAAGb,SAAS,CAAC,KAAK,CAAC;EACnD,MAAM,CAACc,OAAO,EAAEC,aAAa,CAAC,GAAGf,SAAS,CAAC,KAAK,CAAC;EACjD,MAAM,CAACgB,OAAO,EAAEC,aAAa,CAAC,GAAGjB,SAAS,CAAC,KAAK,CAAC;EAEjD,oBACE;IAAA,WACGU,MAAM,gBACL,QAAC,IAAI;MAAC,MAAM,EAAEH,EAAG;MAAC,UAAU,EAAE;IAAM;MAAA;MAAA;MAAA;IAAA,QAAG,gBAEvC;MACE,SAAS,EAAC,wBAAwB;MAClC,GAAG,EAAEH,UAAW;MAChB,GAAG,EAAC,YAAY;MAChB,OAAO,EAAEO;IAAa;MAAA;MAAA;MAAA;IAAA,QAEzB,EACAF,IAAI,gBACH;MAAA,wBACE;QACE,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEQ,aAAc;QACvB,SAAS,EAAC,sBAAsB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGzB,eACT;QACE,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEJ,cAAe;QACxB,SAAS,EAAC,uBAAuB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAG1B,eACT;QACE,IAAI,EAAC,QAAQ;QACb,OAAO,EAAEE,aAAc;QACvB,SAAS,EAAC,sBAAsB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAGzB;IAAA,gBACR,GACD,IAAI,EAEPH,QAAQ,gBAAG,QAAC,SAAS;MAAC,MAAM,EAAEL,EAAG;MAAC,QAAQ,EAAEE,IAAI,CAACS;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,GAAG,IAAI,EAEpEF,OAAO,gBAAG,QAAC,aAAa;MAAC,MAAM,EAAET,EAAG;MAAC,QAAQ,EAAEE,IAAI,CAACS;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,GAAG,IAAI,EACvEJ,OAAO,gBAAG,QAAC,QAAQ;MAAC,MAAM,EAAEP,EAAG;MAAC,QAAQ,EAAEE,IAAI,CAACS;IAAS;MAAA;MAAA;MAAA;IAAA,QAAG,GAAG,IAAI;EAAA,gBAClE;AAEP,CAAC;AAAC,GA3DIZ,WAAW;EAAA,QACAL,SAAS,EAEAI,QAAQ,EAODL,SAAS,EACLA,SAAS,EACXA,SAAS,EACTA,SAAS;AAAA;AAAA,KAbtCM,WAAW;AA4DjB,eAAeA,WAAW;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
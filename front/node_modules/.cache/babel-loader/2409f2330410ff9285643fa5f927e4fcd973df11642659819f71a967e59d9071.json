{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/NoteBook.js\",\n  _s = $RefreshSig$();\nimport PopUpForm from './forms/PopUpForm';\nimport NewBookCharacterForm from './forms/NewBookCharacterForm';\nimport { useState, useEffect } from 'react';\nimport useToggle from './hooks/useToggle';\nimport noteBook from './sprites/notes1.png';\nimport axios from 'axios';\nimport './css/CharacterBook.css';\nimport NotePage from './NotePage';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NoteBook = _ref => {\n  _s();\n  let {\n    bookId,\n    username\n  } = _ref;\n  const [notes, setNotes] = useState([]);\n  const [currNote, setCurrNote] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n  useEffect(() => {\n    const getNotes = async () => {\n      const res = await axios.get(`/books/${bookId}/characters`);\n      if (res.data.characters.length > 0) {\n        setNotes(n => n = res.data.characters);\n      }\n    };\n    getNotes();\n  }, []);\n  const showContents = () => {\n    setCurrNote(null);\n  };\n  const changeCharacter = num => {\n    let newNote = currNote ? currNote + num : num;\n    if (newNote < 0) newNote = null;\n    if (newNote > charNotes.length) newNote = 0;\n    setCurrNote(newNote);\n  };\n  const addCharacter = async data => {\n    const res = await axios.post(`/books/${bookId}/characters`, data);\n    if (res.data.character) {\n      setNotes(n => n = [...notes, res.data.character]);\n    }\n  };\n  const deleteCharacter = async noteId => {\n    const res = await axios.delete(`/books/${bookId}/characters/${noteId}`);\n    console.log(res);\n    if (res.data.message === 'Deleted!') {\n      if (currNote) {\n        if (notes[currNote].id === noteId) {\n          changeCharacter(-1);\n        }\n      }\n      let updatedNotes = notes.map(note => {\n        if (note.id != noteId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(n => n = updatedNotes);\n    }\n  };\n  const editCharacter = async data => {\n    const noteId = notes[currNote].id;\n    const res = await axios.patch(`/books/${bookId}/characters/${noteId}`, data);\n    if (res.data.character) {\n      setNotes(n => n = notes.map(note => note.id != noteId ? note : res.data.character));\n    }\n  };\n  const addExistingChar = async data => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: noteBook,\n      alt: \"NoteBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 3\n    }, this), editForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setEditForm(false),\n      submit: editCharacter,\n      inputs: [{\n        title: 'Name',\n        name: 'name'\n      }, {\n        title: 'Birthday',\n        name: 'birthday'\n      }, {\n        title: 'Description',\n        name: 'description'\n      }, {\n        title: 'Extra info',\n        name: 'extra_info'\n      }, {\n        title: 'Backstory',\n        name: 'story'\n      }],\n      initData: {\n        name: '',\n        birthday: '',\n        description: '',\n        extra_info: '',\n        story: ''\n      },\n      submitText: \"Add Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 3\n    }, this) : null, addExistingForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NewBookCharacterForm, {\n        addChar: addExistingChar,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 5\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setAddExistingForm(false),\n        name: \"btn\",\n        children: \"Cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 5\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: [currNote ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Table of Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 6\n      }, this), currNote && notes.length > 0 ? /*#__PURE__*/_jsxDEV(Character, {\n        handleClick: () => setEditForm(true),\n        character: notes[currNote],\n        deleteChar: deleteCharacter\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 5\n      }, this) : notes.map((note, inx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CharLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => changeCharacter(inx),\n          name: \"button\",\n          children: note.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 5\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deleteCharacter(note.id),\n          name: \"button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 5\n        }, this)]\n      }, note.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 29\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 3\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: addCharacter,\n      inputs: [{\n        title: 'Name',\n        name: 'name'\n      }, {\n        title: 'Birthday',\n        name: 'birthday'\n      }, {\n        title: 'Description',\n        name: 'description'\n      }, {\n        title: 'Extra info',\n        name: 'extra_info'\n      }, {\n        title: 'Backstory',\n        name: 'story'\n      }],\n      initData: {\n        name: '',\n        birthday: '',\n        description: '',\n        extra_info: '',\n        story: ''\n      },\n      submitText: \"Add Character\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 3\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 3\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddExistingForm(true),\n        name: \"btn\",\n        children: \"Add existing character\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true)]\n  }, void 0, true);\n};\n_s(NoteBook, \"XeRvelymznSOhRbrq6Supuo8Vig=\");\n_c = NoteBook;\nexport default NoteBook;\nvar _c;\n$RefreshReg$(_c, \"NoteBook\");","map":{"version":3,"names":["PopUpForm","NewBookCharacterForm","useState","useEffect","useToggle","noteBook","axios","NotePage","NoteBook","bookId","username","notes","setNotes","currNote","setCurrNote","addForm","setAddForm","editForm","setEditForm","addExistingForm","setAddExistingForm","getNotes","res","get","data","characters","length","n","showContents","changeCharacter","num","newNote","charNotes","addCharacter","post","character","deleteCharacter","noteId","delete","console","log","message","id","updatedNotes","map","note","editCharacter","patch","addExistingChar","title","name","birthday","description","extra_info","story","inx"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/NoteBook.js"],"sourcesContent":["\nimport PopUpForm from './forms/PopUpForm';\nimport NewBookCharacterForm from './forms/NewBookCharacterForm';\nimport {useState,useEffect} from 'react';\nimport useToggle from './hooks/useToggle';\nimport noteBook from './sprites/notes1.png';\nimport axios from 'axios';\nimport './css/CharacterBook.css';\n\nimport NotePage from './NotePage';\nconst NoteBook=({bookId,username})=>{\n\n  const [notes,setNotes] = useState([]);\n  const [currNote,setCurrNote]=useState(null);\n  const [addForm,setAddForm] = useState(false);\n  const [editForm,setEditForm] = useState(false);\n  const [addExistingForm,setAddExistingForm] = useState(false);\n\n\n\n  useEffect(()=>{\n  const getNotes = async()=>{\n    const res = await axios.get(`/books/${bookId}/characters`);\n    if(res.data.characters.length>0){\n      setNotes((n)=> n= res.data.characters);\n    }\n  }\n  getNotes();\n  },[])\n\n\n\n  const showContents =()=>{\n  setCurrNote(null);\n  }\n\n  const changeCharacter =(num)=>{\n  let newNote = currNote? currNote+num : num;\n  if (newNote<0) newNote = null;\n  if(newNote>charNotes.length) newNote =0;\n  setCurrNote(newNote);\n  }\n\n\n  const addCharacter =async(data)=>{\n    const res = await axios.post(`/books/${bookId}/characters`,data);\n    if(res.data.character){\n      setNotes((n)=> n= [...notes,res.data.character]);\n    }\n  }\n\n  const deleteCharacter =async(noteId)=>{\n     const res = await axios.delete(`/books/${bookId}/characters/${noteId}`);\n     console.log(res);\n     if(res.data.message === 'Deleted!'){\n       if(currNote){\n         if(notes[currNote].id === noteId){\n           changeCharacter(-1);\n         }\n       }\n       let updatedNotes = notes.map(note=> {if(note.id != noteId)return note})\n       if(!updatedNotes[0]) updatedNotes=[];\n       setNotes((n)=> n= updatedNotes);\n     }\n\n  }\n\n  const editCharacter =async(data)=>{\n    const noteId = notes[currNote].id\n    const res = await axios.patch(`/books/${bookId}/characters/${noteId}`,data);\n    if(res.data.character){\n      setNotes((n)=> n= notes.map(note=> note.id != noteId? note : res.data.character));\n    }\n  }\n\n\n  const addExistingChar =async(data)=>{\n\n  }\n\n\n  return <>\n  <img className ='CharacterBook_Image' src={noteBook} alt=\"NoteBook\"/>\n\n  {editForm?\n  <PopUpForm closeForm ={()=>setEditForm(false)} submit={editCharacter} inputs={[{title: 'Name', name: 'name'},{title: 'Birthday', name:'birthday'},{title: 'Description', name:'description'},{title:'Extra info', name:'extra_info'},{title:'Backstory', name:'story'}]} initData={{name:'',birthday:'',description:'',extra_info:'',story:''}} submitText='Add Character'/>\n  :null\n  }\n\n  {\n    addExistingForm?\n    <>\n    <NewBookCharacterForm addChar={addExistingChar} username={username}/>\n    <button type=\"button\" onClick={()=>setAddExistingForm(false)}  name=\"btn\">Cancle</button>\n    </>\n    :null\n  }\n\n\n  <div className='CharacterBook'>\n\n  {\n    currNote?\n    null\n    :<h3>Table of Contents</h3>\n  }\n\n  {\n    currNote && notes.length>0?\n    <Character handleClick={()=>setEditForm(true)} character={notes[currNote]} deleteChar={deleteCharacter}/>\n    :\n    notes.map((note,inx) => <div className='CharLink' key={note.id}>\n    <button type=\"button\" onClick={()=>changeCharacter(inx)} name=\"button\">{note.name}</button>\n    <button type=\"button\" onClick={()=>deleteCharacter(note.id)} name=\"button\">X</button>\n  </div>\n  )\n  }\n\n  </div>\n\n  {addForm?\n  <PopUpForm closeForm ={()=>setAddForm(false)} submit={addCharacter} inputs={[{title: 'Name', name: 'name'},{title: 'Birthday', name:'birthday'},{title: 'Description', name:'description'},{title:'Extra info', name:'extra_info'},{title:'Backstory', name:'story'}]} initData={{name:'',birthday:'',description:'',extra_info:'',story:''}} submitText='Add Character'/>\n  :<>\n  <button type=\"button\" className='CharacterBook_button' onClick={()=>setAddForm(true)} name=\"button\">New character</button>\n  <button type=\"button\" className='CharacterBook_button' onClick={()=>setAddExistingForm(true)}  name=\"btn\">Add existing character</button>\n  </>\n  }\n  </>\n\n\n\n\n}\nexport default NoteBook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
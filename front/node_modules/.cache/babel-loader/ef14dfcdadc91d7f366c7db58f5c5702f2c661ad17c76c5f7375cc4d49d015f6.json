{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/forms/NewBookForm.js\",\n  _s = $RefreshSig$();\nimport cover from \"../sprites/OpenBook1.png\";\nimport page from \"../sprites/OpenBookPages.png\";\nimport closedBook from \"../sprites/BookMedival.png\";\nimport bookClosed from \"../sprites/bookClosed.png\";\nimport ink from \"../sprites/ink2.png\";\nimport inkOutline from \"../sprites/ink3.png\";\nimport useFields from \"../hooks/useFields\";\nimport { useParams } from \"react-router-dom\";\nimport { useState } from 'react';\n//a form to add a new book\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst NewBookForm = _ref => {\n  _s();\n  let {\n    addBook\n  } = _ref;\n  const {\n    id\n  } = useParams();\n  let initData = {\n    title: \"\",\n    synopsys: \"\",\n    text_color: \"#000000\",\n    cover_color: \"#ffffff\",\n    theme: 0,\n    is_public: false\n  };\n\n  //\n  // const [formData,setFormData] = useState(initState);\n  //\n  // const handleChange =(event)=>{\n  //   let {name,value}=event.target;\n  //   if(event.target.type === 'checkbox'){\n  //     value = event.target.checked;\n  //   }\n  //\n  //   setFormData((state)=>({...state,[name]: value}));\n  // }\n  //\n  // const resetState =()=>{\n  //   setState(initState);\n  // }\n\n  const [formData, handleChange, resetFormData] = useFields(initData);\n  const handleSubmit = event => {\n    event.preventDefault();\n    addBook(formData, id);\n    resetFormData();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"Form\",\n      onSubmit: handleSubmit,\n      children: [formData ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: closedBook,\n          alt: \"closedBook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n          style: {\n            backgroundColor: formData.cover_color\n          },\n          className: \"image_color\",\n          src: bookClosed,\n          alt: \"closedBook\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 5\n        }, this)]\n      }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"title\", /*#__PURE__*/_jsxDEV(\"input\", {\n          required: true,\n          type: \"text\",\n          name: \"title\",\n          value: formData.title,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"synopsys\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          name: \"synopsys\",\n          value: formData.synopsys,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Title text color\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          name: \"text_color\",\n          value: formData.text_color,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Cover color\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"color\",\n          name: \"cover_color\",\n          value: formData.cover_color,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n        children: [\"Public\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"checkbox\",\n          name: \"is_public\",\n          value: formData.is_public,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"button\",\n        children: \"Write!\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 7\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, this)\n  }, void 0, false);\n};\n_s(NewBookForm, \"EIwz0IbfL3oy8jKelAFPKFAdiVo=\", false, function () {\n  return [useParams, useFields];\n});\n_c = NewBookForm;\nexport default NewBookForm;\nvar _c;\n$RefreshReg$(_c, \"NewBookForm\");","map":{"version":3,"names":["cover","page","closedBook","bookClosed","ink","inkOutline","useFields","useParams","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","NewBookForm","_ref","_s","addBook","id","initData","title","synopsys","text_color","cover_color","theme","is_public","formData","handleChange","resetFormData","handleSubmit","event","preventDefault","children","className","onSubmit","src","alt","fileName","_jsxFileName","lineNumber","columnNumber","style","backgroundColor","required","type","name","value","onChange","_c","$RefreshReg$"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/forms/NewBookForm.js"],"sourcesContent":["import cover from \"../sprites/OpenBook1.png\";\nimport page from \"../sprites/OpenBookPages.png\";\n\nimport closedBook from \"../sprites/BookMedival.png\";\nimport bookClosed from \"../sprites/bookClosed.png\";\n\n\nimport ink from \"../sprites/ink2.png\";\nimport inkOutline from \"../sprites/ink3.png\";\n\n\nimport useFields from \"../hooks/useFields\";\nimport { useParams } from \"react-router-dom\";\nimport {useState} from 'react';\n//a form to add a new book\nconst NewBookForm = ({ addBook }) => {\n  const { id } = useParams();\n\n\n  let initData = {\n    title: \"\",\n    synopsys: \"\",\n    text_color: \"#000000\",\n    cover_color: \"#ffffff\",\n    theme: 0,\n    is_public: false,\n  };\n\n  //\n  // const [formData,setFormData] = useState(initState);\n  //\n  // const handleChange =(event)=>{\n  //   let {name,value}=event.target;\n  //   if(event.target.type === 'checkbox'){\n  //     value = event.target.checked;\n  //   }\n  //\n  //   setFormData((state)=>({...state,[name]: value}));\n  // }\n  //\n  // const resetState =()=>{\n  //   setState(initState);\n  // }\n\n\n\n  const [formData, handleChange, resetFormData] = useFields(initData);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    addBook(formData, id);\n    resetFormData();\n  };\n\n  return (<>\n\n\n\n    <form className=\"Form\" onSubmit={handleSubmit}>\n    {\n      formData? <>\n      <img\n      src={closedBook}\n      alt=\"closedBook\"\n    />\n    <img\n      style={{ backgroundColor: formData.cover_color}}\n      className=\"image_color\"\n      src={bookClosed}\n      alt=\"closedBook\"\n    /></>\n  :null}\n      <label>\n        title\n        <input\n          required\n          type=\"text\"\n          name=\"title\"\n          value={formData.title}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        synopsys\n        <input\n          type=\"text\"\n          name=\"synopsys\"\n          value={formData.synopsys}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Title text color\n        <input\n          type=\"color\"\n          name=\"text_color\"\n          value={formData.text_color}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Cover color\n        <input\n          type=\"color\"\n          name=\"cover_color\"\n          value={formData.cover_color}\n          onChange={handleChange}\n        />\n      </label>\n      <label>\n        Public\n        <input\n          type=\"checkbox\"\n          name=\"is_public\"\n          value={formData.is_public}\n          onChange={handleChange}\n        />\n      </label>\n      <button type=\"submit\" name=\"button\">\n        Write!\n      </button>\n    </form>\n\n    </>\n  );\n};\nexport default NewBookForm;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
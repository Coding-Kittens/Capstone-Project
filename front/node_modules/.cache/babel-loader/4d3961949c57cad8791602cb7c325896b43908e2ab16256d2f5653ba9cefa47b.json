{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/forms/ChangePasswordform.js\",\n  _s = $RefreshSig$();\nimport useFields from '../hooks/useFields';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ChangePasswordform = _ref => {\n  _s();\n  let {\n    changePassword\n  } = _ref;\n  const initData = {\n    old_password: '',\n    password: '',\n    new_password: ''\n  };\n  const [formData, handleChange, resetFormData] = useFields(initData);\n  const handleSubmit = event => {\n    event.preventDefault();\n    if (formData.password === formData.new_password) {\n      changePassword({\n        old_password: formData.old_password,\n        password: formData.password\n      });\n    } else {\n      console.log('new password not the same');\n      //set message to, please make sure you tyeped the new password the same both times\n    }\n\n    resetFormData();\n  };\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"Form\",\n    onSubmit: handleSubmit,\n    children: [/*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"Old Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        name: \"old_password\",\n        value: formData.old_password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"New Password\", /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        name: \"password\",\n        value: formData.password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [\"New Password again\", /*#__PURE__*/_jsxDEV(\"input\", {\n        required: true,\n        type: \"text\",\n        name: \"new_password\",\n        value: formData.new_password,\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 26\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 1\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      type: \"submit\",\n      name: \"button\",\n      children: \"Change Password\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 3\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 8\n  }, this);\n};\n_s(ChangePasswordform, \"7+SPu1pq35jhCALCI7jtnSrdWRk=\", false, function () {\n  return [useFields];\n});\n_c = ChangePasswordform;\nexport default ChangePasswordform;\nvar _c;\n$RefreshReg$(_c, \"ChangePasswordform\");","map":{"version":3,"names":["useFields","ChangePasswordform","changePassword","initData","old_password","password","new_password","formData","handleChange","resetFormData","handleSubmit","event","preventDefault","console","log"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/forms/ChangePasswordform.js"],"sourcesContent":["import useFields from '../hooks/useFields';\n\nconst ChangePasswordform =({changePassword})=>{\n\n  const initData ={\nold_password: '',\npassword: '',\nnew_password: '',\n  }\n\n\n  const[formData,handleChange,resetFormData] = useFields(initData);\n\n\n  const handleSubmit=(event)=>{\n    event.preventDefault();\n    if(formData.password===formData.new_password){\n      changePassword({old_password:formData.old_password,password:formData.password});\n    }else{\n      console.log('new password not the same');\n      //set message to, please make sure you tyeped the new password the same both times\n    }\n    resetFormData();\n  }\n\nreturn <form className=\"Form\" onSubmit={handleSubmit}>\n<label>Old Password<input required type=\"text\" name=\"old_password\" value={formData.old_password} onChange={handleChange}/></label>\n<label>New Password<input required type=\"text\" name=\"password\" value={formData.password} onChange={handleChange}/></label>\n<label>New Password again<input required type=\"text\" name=\"new_password\" value={formData.new_password} onChange={handleChange}/></label>\n  <button type=\"submit\" name=\"button\">Change Password</button>\n</form>\n\n\n}\nexport default ChangePasswordform;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,oBAAoB;AAAC;AAE3C,MAAMC,kBAAkB,GAAE,QAAoB;EAAA;EAAA,IAAnB;IAACC;EAAc,CAAC;EAEzC,MAAMC,QAAQ,GAAE;IAClBC,YAAY,EAAE,EAAE;IAChBC,QAAQ,EAAE,EAAE;IACZC,YAAY,EAAE;EACZ,CAAC;EAGD,MAAK,CAACC,QAAQ,EAACC,YAAY,EAACC,aAAa,CAAC,GAAGT,SAAS,CAACG,QAAQ,CAAC;EAGhE,MAAMO,YAAY,GAAEC,KAAK,IAAG;IAC1BA,KAAK,CAACC,cAAc,EAAE;IACtB,IAAGL,QAAQ,CAACF,QAAQ,KAAGE,QAAQ,CAACD,YAAY,EAAC;MAC3CJ,cAAc,CAAC;QAACE,YAAY,EAACG,QAAQ,CAACH,YAAY;QAACC,QAAQ,EAACE,QAAQ,CAACF;MAAQ,CAAC,CAAC;IACjF,CAAC,MAAI;MACHQ,OAAO,CAACC,GAAG,CAAC,2BAA2B,CAAC;MACxC;IACF;;IACAL,aAAa,EAAE;EACjB,CAAC;EAEH,oBAAO;IAAM,SAAS,EAAC,MAAM;IAAC,QAAQ,EAAEC,YAAa;IAAA,wBACrD;MAAA,wCAAmB;QAAO,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,cAAc;QAAC,KAAK,EAAEH,QAAQ,CAACH,YAAa;QAAC,QAAQ,EAAEI;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eAClI;MAAA,wCAAmB;QAAO,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,UAAU;QAAC,KAAK,EAAED,QAAQ,CAACF,QAAS;QAAC,QAAQ,EAAEG;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eAC1H;MAAA,8CAAyB;QAAO,QAAQ;QAAC,IAAI,EAAC,MAAM;QAAC,IAAI,EAAC,cAAc;QAAC,KAAK,EAAED,QAAQ,CAACD,YAAa;QAAC,QAAQ,EAAEE;MAAa;QAAA;QAAA;QAAA;MAAA,QAAE;IAAA;MAAA;MAAA;MAAA;IAAA,QAAQ,eACtI;MAAQ,IAAI,EAAC,QAAQ;MAAC,IAAI,EAAC,QAAQ;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAyB;EAAA;IAAA;IAAA;IAAA;EAAA,QACvD;AAGP,CAAC;AAAA,GA/BKP,kBAAkB;EAAA,QASuBD,SAAS;AAAA;AAAA,KATlDC,kBAAkB;AAgCxB,eAAeA,kBAAkB;AAAC;AAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js\",\n  _s = $RefreshSig$();\nimport PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport axios from \"axios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from \"./Tab\";\n\n///shows all the bookmarks for a book and lets you add a new one\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst BookMark = _ref => {\n  _s();\n  let {\n    bookId,\n    username,\n    currPageId,\n    changePage\n  } = _ref;\n  const [notes, setNotes] = useState([]);\n  const [currNote, setCurrNote] = useState(1);\n  const [addForm, setAddForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n  useEffect(() => {\n    const getNotes = async () => {\n      const res = await axios.get(`/bookmarks/${bookId}`);\n      if (res.data.bookmarks.length > 0) {\n        setNotes(n => n = res.data.bookmarks);\n      }\n    };\n    getNotes();\n  }, []);\n  const addNote = async (data, pageId) => {\n    const res = await axios.post(`/bookmarks/${bookId}/${pageId}`, data);\n    if (res.data.bookmark) {\n      setNotes(n => n = [...notes, res.data.bookmark]);\n    }\n  };\n  const deleteNote = async pageId => {\n    const res = await axios.delete(`/bookmarks/${bookId}/${pageId}`);\n    if (res.data.message === \"Deleted!\") {\n      let updatedNotes = notes.map(note => {\n        if (note.id != pageId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes(n => n = updatedNotes);\n    }\n  };\n  const editNote = async (data, pageId) => {\n    const res = await axios.patch(`/bookmarks/${bookId}/${pageId}`, {\n      ...data,\n      page_id: currPageId,\n      book_id: bookId\n    });\n    if (res.data.bookmark) {\n      setNotes(n => n = notes.map(note => note.id != pageId ? note : res.data.bookmark));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: bookmark,\n      alt: \"bookmark\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: notes.length > 0 && currPageId ? notes.map(note => /*#__PURE__*/_jsxDEV(Tab, {\n        info: note,\n        page_id: currPageId,\n        handleClick: () => changePage(note.page_num),\n        editTab: editNote,\n        deleteTab: deleteNote\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 15\n      }, this)) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: data => addNote(data, currPageId),\n      inputs: [{\n        name: 'text',\n        title: 'Note'\n      }],\n      initData: {\n        text: \"\"\n      },\n      submitText: \"Add\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New Bookmark\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this)\n    }, void 0, false)]\n  }, void 0, true);\n};\n_s(BookMark, \"VMKEYY3Vv//DZLdKjGWBQ4+vQtM=\");\n_c = BookMark;\nexport default BookMark;\nvar _c;\n$RefreshReg$(_c, \"BookMark\");","map":{"version":3,"names":["PopUpForm","useState","useEffect","useToggle","bookmark","axios","NotePage","Tab","BookMark","bookId","username","currPageId","changePage","notes","setNotes","currNote","setCurrNote","addForm","setAddForm","addExistingForm","setAddExistingForm","getNotes","res","get","data","bookmarks","length","n","addNote","pageId","post","deleteNote","delete","message","updatedNotes","map","note","id","editNote","patch","page_id","book_id","page_num","name","title","text"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/books/BookMark.js"],"sourcesContent":["import PopUpForm from \"../forms/PopUpForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport bookmark from \"../sprites/bookMark.png\";\nimport axios from \"axios\";\nimport \"../css/CharacterBook.css\";\nimport NotePage from \"../notes/NotePage\";\nimport Tab from \"./Tab\";\n\n///shows all the bookmarks for a book and lets you add a new one\nconst BookMark = ({ bookId, username, currPageId, changePage }) => {\n  const [notes, setNotes] = useState([]);\n  const [currNote, setCurrNote] = useState(1);\n  const [addForm, setAddForm] = useState(false);\n\n  const [addExistingForm, setAddExistingForm] = useState(false);\n\n  useEffect(() => {\n    const getNotes = async () => {\n      const res = await axios.get(`/bookmarks/${bookId}`);\n      if (res.data.bookmarks.length > 0) {\n        setNotes((n) => (n = res.data.bookmarks));\n      }\n    };\n    getNotes();\n  }, []);\n\n\n  const addNote = async (data, pageId) => {\n    const res = await axios.post(`/bookmarks/${bookId}/${pageId}`, data);\n    if (res.data.bookmark) {\n      setNotes((n) => (n = [...notes, res.data.bookmark]));\n    }\n  };\n\n  const deleteNote = async (pageId) => {\n    const res = await axios.delete(`/bookmarks/${bookId}/${pageId}`);\n    if (res.data.message === \"Deleted!\") {\n      let updatedNotes = notes.map((note) => {\n        if (note.id != pageId) return note;\n      });\n      if (!updatedNotes[0]) updatedNotes = [];\n      setNotes((n) => (n = updatedNotes));\n    }\n  };\n\n  const editNote = async (data, pageId) => {\n    const res = await axios.patch(`/bookmarks/${bookId}/${pageId}`, {\n      ...data,\n      page_id: currPageId,\n      book_id: bookId,\n    });\n    if (res.data.bookmark) {\n      setNotes(\n        (n) =>\n          (n = notes.map((note) =>\n            note.id != pageId ? note : res.data.bookmark\n          ))\n      );\n    }\n  };\n\n  return (\n    <>\n      <img className=\"CharacterBook_Image\" src={bookmark} alt=\"bookmark\" />\n\n      <div className=\"CharacterBook\">\n        {notes.length > 0 && currPageId\n          ? notes.map((note) => (\n              <Tab\n                info={note}\n                page_id={currPageId}\n                handleClick={() => changePage(note.page_num)}\n                editTab={editNote}\n                deleteTab={deleteNote}\n              />\n            ))\n          : null}\n      </div>\n\n      {addForm ? (\n        <PopUpForm\n          closeForm={() => setAddForm(false)}\n          submit={(data) => addNote(data, currPageId)}\n          inputs={[{name:'text',title:'Note'}]}\n          initData={{\n            text: \"\",\n          }}\n          submitText=\"Add\"\n        />\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddForm(true)}\n            name=\"button\"\n          >\n            New Bookmark\n          </button>\n        </>\n      )}\n    </>\n  );\n};\nexport default BookMark;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}
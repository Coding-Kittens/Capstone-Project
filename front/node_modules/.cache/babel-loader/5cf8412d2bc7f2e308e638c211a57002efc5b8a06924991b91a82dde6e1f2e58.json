{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/forms/PopUpForm.js\",\n  _s = $RefreshSig$();\nimport useFields from \"../hooks/useFields\";\nimport { v4 as uuidv4 } from 'uuid';\n//takes inputs and makes a small popup form for it\n//\n//takes:\n//functions to submit and close the form\n//the text on the submit btn\n//the initData\n//the inputs witch is a list of objs [{title,name,type}]\n////\n//title is the label text\n//name is the input name\n//type is the type of input and is optianal it defalts to text\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst FormInputs = _ref => {\n  let {\n    inputs,\n    formData,\n    handleChange\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: inputs ? inputs.map(input => /*#__PURE__*/_jsxDEV(\"label\", {\n      children: [input.title, /*#__PURE__*/_jsxDEV(\"input\", {\n        type: input.type ? input.type : \"text\",\n        name: input.name,\n        value: formData[input.name],\n        onChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, this)]\n    }, uuidv4(), true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }, this)) : null\n  }, void 0, false);\n};\n_c = FormInputs;\nconst PopUpForm = _ref2 => {\n  _s();\n  let {\n    submit,\n    inputs,\n    initData,\n    submitText,\n    closeForm\n  } = _ref2;\n  const [formData, handleChange, resetFormData] = useFields(initData);\n  const handleSubmit = event => {\n    event.preventDefault();\n    submit(formData);\n    resetFormData();\n    closeForm();\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      className: \"PopUp\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormInputs, {\n        inputs: inputs,\n        formData: formData,\n        handleChange: handleChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 7\n      }, this), closeForm ? /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: closeForm,\n        name: \"button\",\n        children: \"Cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"submit\",\n        name: \"button\",\n        children: submitText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n_s(PopUpForm, \"dz4ROXeyVRBJUFLZx7r19KIR99s=\", false, function () {\n  return [useFields];\n});\n_c2 = PopUpForm;\nexport default PopUpForm;\nvar _c, _c2;\n$RefreshReg$(_c, \"FormInputs\");\n$RefreshReg$(_c2, \"PopUpForm\");","map":{"version":3,"names":["useFields","v4","uuidv4","jsxDEV","_jsxDEV","Fragment","_Fragment","FormInputs","_ref","inputs","formData","handleChange","children","map","input","title","type","name","value","onChange","fileName","_jsxFileName","lineNumber","columnNumber","_c","PopUpForm","_ref2","_s","submit","initData","submitText","closeForm","resetFormData","handleSubmit","event","preventDefault","className","onSubmit","onClick","_c2","$RefreshReg$"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/front/src/forms/PopUpForm.js"],"sourcesContent":["import useFields from \"../hooks/useFields\";\nimport { v4 as uuidv4 } from 'uuid';\n//takes inputs and makes a small popup form for it\n//\n//takes:\n//functions to submit and close the form\n//the text on the submit btn\n//the initData\n//the inputs witch is a list of objs [{title,name,type}]\n////\n//title is the label text\n//name is the input name\n//type is the type of input and is optianal it defalts to text\n\n\nconst FormInputs=({inputs,formData, handleChange})=>{\n\n\n\n  return <>{inputs\n    ?  inputs.map((input) => (\n        <label key={uuidv4()}>\n          {input.title}\n          <input\n            type={input.type ? input.type : \"text\"}\n            name={input.name}\n            value={formData[input.name]}\n            onChange={handleChange}\n          />\n        </label>\n      ))\n    : null}</>\n}\n\n\nconst PopUpForm = ({ submit, inputs, initData, submitText, closeForm }) => {\n    const [formData, handleChange, resetFormData] = useFields(initData);\n\n  const handleSubmit = (event) => {\n    event.preventDefault();\n    submit(formData);\n    resetFormData();\n    closeForm();\n  };\n\n  return (\n    <>\n      <form className=\"PopUp\" onSubmit={handleSubmit}>\n      <FormInputs inputs={inputs} formData={formData} handleChange={handleChange}/>\n        {closeForm ? (\n          <button type=\"button\" onClick={closeForm} name=\"button\">\n            Cancle\n          </button>\n        ) : null}\n        <button type=\"submit\" name=\"button\">\n          {submitText}\n        </button>\n      </form>\n    </>\n  );\n};\nexport default PopUpForm;\n"],"mappings":";;AAAA,OAAOA,SAAS,MAAM,oBAAoB;AAC1C,SAASC,EAAE,IAAIC,MAAM,QAAQ,MAAM;AACnC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAAA,SAAAC,QAAA,IAAAC,SAAA;AAGA,MAAMC,UAAU,GAACC,IAAA,IAAmC;EAAA,IAAlC;IAACC,MAAM;IAACC,QAAQ;IAAEC;EAAY,CAAC,GAAAH,IAAA;EAI/C,oBAAOJ,OAAA,CAAAE,SAAA;IAAAM,QAAA,EAAGH,MAAM,GACXA,MAAM,CAACI,GAAG,CAAEC,KAAK,iBAChBV,OAAA;MAAAQ,QAAA,GACGE,KAAK,CAACC,KAAK,eACZX,OAAA;QACEY,IAAI,EAAEF,KAAK,CAACE,IAAI,GAAGF,KAAK,CAACE,IAAI,GAAG,MAAO;QACvCC,IAAI,EAAEH,KAAK,CAACG,IAAK;QACjBC,KAAK,EAAER,QAAQ,CAACI,KAAK,CAACG,IAAI,CAAE;QAC5BE,QAAQ,EAAER;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACvB;IAAA,GAPQrB,MAAM,EAAE;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,QASrB,CAAC,GACF;EAAI,iBAAI;AACd,CAAC;AAAAC,EAAA,GAjBKjB,UAAU;AAoBhB,MAAMkB,SAAS,GAAGC,KAAA,IAAyD;EAAAC,EAAA;EAAA,IAAxD;IAAEC,MAAM;IAAEnB,MAAM;IAAEoB,QAAQ;IAAEC,UAAU;IAAEC;EAAU,CAAC,GAAAL,KAAA;EAClE,MAAM,CAAChB,QAAQ,EAAEC,YAAY,EAAEqB,aAAa,CAAC,GAAGhC,SAAS,CAAC6B,QAAQ,CAAC;EAErE,MAAMI,YAAY,GAAIC,KAAK,IAAK;IAC9BA,KAAK,CAACC,cAAc,EAAE;IACtBP,MAAM,CAAClB,QAAQ,CAAC;IAChBsB,aAAa,EAAE;IACfD,SAAS,EAAE;EACb,CAAC;EAED,oBACE3B,OAAA,CAAAE,SAAA;IAAAM,QAAA,eACER,OAAA;MAAMgC,SAAS,EAAC,OAAO;MAACC,QAAQ,EAAEJ,YAAa;MAAArB,QAAA,gBAC/CR,OAAA,CAACG,UAAU;QAACE,MAAM,EAAEA,MAAO;QAACC,QAAQ,EAAEA,QAAS;QAACC,YAAY,EAAEA;MAAa;QAAAS,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAE,EAC1EQ,SAAS,gBACR3B,OAAA;QAAQY,IAAI,EAAC,QAAQ;QAACsB,OAAO,EAAEP,SAAU;QAACd,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAAC;MAExD;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QAAS,GACP,IAAI,eACRnB,OAAA;QAAQY,IAAI,EAAC,QAAQ;QAACC,IAAI,EAAC,QAAQ;QAAAL,QAAA,EAChCkB;MAAU;QAAAV,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,QACJ;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA;EACJ,iBACN;AAEP,CAAC;AAACI,EAAA,CAzBIF,SAAS;EAAA,QACqCzB,SAAS;AAAA;AAAAuC,GAAA,GADvDd,SAAS;AA0Bf,eAAeA,SAAS;AAAC,IAAAD,EAAA,EAAAe,GAAA;AAAAC,YAAA,CAAAhB,EAAA;AAAAgB,YAAA,CAAAD,GAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}
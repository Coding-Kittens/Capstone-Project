{"ast":null,"code":"var _jsxFileName = \"/Users/rosepowell/Desktop/Book_Writing/book_writing/src/notes/PlaceBook.js\",\n  _s = $RefreshSig$();\nimport Place from \"./Place\";\nimport PopUpForm from \"../forms/PopUpForm\";\nimport NewBookCharacterForm from \"../forms/NewBookCharacterForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport noteBook from \"../sprites/notes1.png\";\nimport useAxios from \"../hooks/useAxios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst PlaceBook = _ref => {\n  _s();\n  let {\n    bookId,\n    username\n  } = _ref;\n  const [reqPlaces, places, setPlaces] = useAxios([]);\n  const [currPlace, setCurrPlace] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n  console.log(places);\n  useEffect(() => {\n    reqPlaces(\"get\", `/books/${bookId}/places`, \"places\");\n  }, []);\n  const showContents = () => {\n    setCurrPlace(null);\n  };\n  const changePlace = num => {\n    let newPlace = currPlace ? currPlace + num : num;\n    if (newPlace < 0) newPlace = null;\n    if (newPlace > places.length) newPlace = 0;\n    setCurrPlace(newPlace);\n  };\n  const addPlace = async data => {\n    reqPlaces(\"post\", `/books/${bookId}/places`, \"place\", data);\n  };\n  const deletePlace = async placeId => {\n    const res = await reqPlaces(\"delete\", `/books/${bookId}/places/${placeId}`);\n    if (res.message === \"Deleted!\") {\n      if (currPlace) {\n        if (places[currPlace - 1].id === placeId) {\n          changePlace(-1);\n        }\n      }\n      let updatedPlaces = places.map(place => {\n        if (place.id != placeId) return place;\n      });\n      if (!updatedPlaces[0]) updatedPlaces = [];\n      setPlaces(n => n = updatedPlaces);\n    }\n  };\n  const editPlace = async data => {\n    const placeId = places[currPlace - 1].id;\n    reqPlaces(\"patch\", `/books/${bookId}/places/${placeId}`, \"place\", data);\n  };\n  const addExistingPlace = async data => {};\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      className: \"CharacterBook_Image\",\n      src: noteBook,\n      alt: \"NoteBook\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), editForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setEditForm(false),\n      submit: editPlace,\n      inputs: [{\n        title: \"Name\",\n        name: \"name\"\n      }, {\n        title: \"Description\",\n        name: \"description\"\n      }, {\n        title: \"Extra info\",\n        name: \"extra_info\"\n      }, {\n        title: \"Public\",\n        name: \"is_public\",\n        type: 'checkbox'\n      }],\n      initData: {\n        name: \"\",\n        description: \"\",\n        extra_info: \"\",\n        is_public: false\n      },\n      submitText: \"Add Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 9\n    }, this) : null, addExistingForm ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(NewBookCharacterForm, {\n        addChar: addExistingPlace,\n        username: username\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        onClick: () => setAddExistingForm(false),\n        name: \"btn\",\n        children: \"Cancle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true) : null, /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook\",\n      children: [currPlace ? null : /*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Table of Contents\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 29\n      }, this), currPlace && places.length > 0 ? /*#__PURE__*/_jsxDEV(Place, {\n        handleClick: () => setEditForm(true),\n        place: places[currPlace - 1],\n        deletePlace: deletePlace\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 11\n      }, this) : places.map((place, inx) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"CharLink\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => changePlace(inx + 1),\n          name: \"button\",\n          children: place.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          onClick: () => deletePlace(place.id),\n          name: \"button\",\n          children: \"X\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 15\n        }, this)]\n      }, place.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 13\n      }, this))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), addForm ? /*#__PURE__*/_jsxDEV(PopUpForm, {\n      closeForm: () => setAddForm(false),\n      submit: addPlace,\n      inputs: [{\n        title: \"Name\",\n        name: \"name\"\n      }, {\n        title: \"Description\",\n        name: \"description\"\n      }, {\n        title: \"Extra info\",\n        name: \"extra_info\"\n      }, {\n        title: \"Public\",\n        name: \"is_public\",\n        type: 'checkbox'\n      }],\n      initData: {\n        name: \"\",\n        description: \"\",\n        extra_info: \"\",\n        is_public: false\n      },\n      submitText: \"Add Place\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddForm(true),\n        name: \"button\",\n        children: \"New place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"CharacterBook_button\",\n        onClick: () => setAddExistingForm(true),\n        name: \"btn\",\n        children: \"Add existing place\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Back\",\n      onClick: () => changePlace(-1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"CharacterBook_Next\",\n      onClick: () => changePlace(1)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(PlaceBook, \"flen7otq8pa1x9HQ74hxvBM7jLo=\", false, function () {\n  return [useAxios];\n});\n_c = PlaceBook;\nexport default PlaceBook;\nvar _c;\n$RefreshReg$(_c, \"PlaceBook\");","map":{"version":3,"names":["Place","PopUpForm","NewBookCharacterForm","useState","useEffect","useToggle","noteBook","useAxios","PlaceBook","bookId","username","reqPlaces","places","setPlaces","currPlace","setCurrPlace","addForm","setAddForm","editForm","setEditForm","addExistingForm","setAddExistingForm","console","log","showContents","changePlace","num","newPlace","length","addPlace","data","deletePlace","placeId","res","message","id","updatedPlaces","map","place","n","editPlace","addExistingPlace","title","name","type","description","extra_info","is_public","inx"],"sources":["/Users/rosepowell/Desktop/Book_Writing/book_writing/src/notes/PlaceBook.js"],"sourcesContent":["import Place from \"./Place\";\nimport PopUpForm from \"../forms/PopUpForm\";\nimport NewBookCharacterForm from \"../forms/NewBookCharacterForm\";\nimport { useState, useEffect } from \"react\";\nimport useToggle from \"../hooks/useToggle\";\nimport noteBook from \"../sprites/notes1.png\";\nimport useAxios from \"../hooks/useAxios\";\n\nconst PlaceBook = ({ bookId, username }) => {\n  const [reqPlaces, places, setPlaces] = useAxios([]);\n  const [currPlace, setCurrPlace] = useState(null);\n  const [addForm, setAddForm] = useState(false);\n  const [editForm, setEditForm] = useState(false);\n  const [addExistingForm, setAddExistingForm] = useState(false);\n\n  console.log(places);\n\n  useEffect(() => {\n    reqPlaces(\"get\", `/books/${bookId}/places`, \"places\");\n  }, []);\n\n  const showContents = () => {\n    setCurrPlace(null);\n  };\n\n  const changePlace = (num) => {\n    let newPlace = currPlace ? currPlace + num : num;\n    if (newPlace < 0) newPlace = null;\n    if (newPlace > places.length) newPlace = 0;\n    setCurrPlace(newPlace);\n  };\n\n  const addPlace = async (data) => {\n    reqPlaces(\"post\", `/books/${bookId}/places`, \"place\", data);\n  };\n\n  const deletePlace = async (placeId) => {\n    const res = await reqPlaces(\"delete\", `/books/${bookId}/places/${placeId}`);\n\n    if (res.message === \"Deleted!\") {\n      if (currPlace) {\n        if (places[currPlace - 1].id === placeId) {\n          changePlace(-1);\n        }\n      }\n      let updatedPlaces = places.map((place) => {\n        if (place.id != placeId) return place;\n      });\n      if (!updatedPlaces[0]) updatedPlaces = [];\n      setPlaces((n) => (n = updatedPlaces));\n    }\n  };\n\n  const editPlace = async (data) => {\n    const placeId = places[currPlace - 1].id;\n    reqPlaces(\"patch\", `/books/${bookId}/places/${placeId}`, \"place\", data);\n  };\n\n  const addExistingPlace = async (data) => {};\n\n  return (\n    <>\n      <img className=\"CharacterBook_Image\" src={noteBook} alt=\"NoteBook\" />\n\n      {editForm ? (\n        <PopUpForm\n          closeForm={() => setEditForm(false)}\n          submit={editPlace}\n          inputs={[\n            { title: \"Name\", name: \"name\" },\n            { title: \"Description\", name: \"description\" },\n            { title: \"Extra info\", name: \"extra_info\" },\n            { title: \"Public\", name: \"is_public\",type:'checkbox'},\n          ]}\n          initData={{\n            name: \"\",\n            description: \"\",\n            extra_info: \"\",\n            is_public: false,\n          }}\n          submitText=\"Add Place\"\n        />\n      ) : null}\n\n      {addExistingForm ? (\n        <>\n          <NewBookCharacterForm\n            addChar={addExistingPlace}\n            username={username}\n          />\n          <button\n            type=\"button\"\n            onClick={() => setAddExistingForm(false)}\n            name=\"btn\"\n          >\n            Cancle\n          </button>\n        </>\n      ) : null}\n\n      <div className=\"CharacterBook\">\n        {currPlace ? null : <h3>Table of Contents</h3>}\n\n        {currPlace && places.length > 0 ? (\n          <Place\n            handleClick={() => setEditForm(true)}\n            place={places[currPlace - 1]}\n            deletePlace={deletePlace}\n          />\n        ) : (\n          places.map((place, inx) => (\n            <div className=\"CharLink\" key={place.id}>\n              <button\n                type=\"button\"\n                onClick={() => changePlace(inx + 1)}\n                name=\"button\"\n              >\n                {place.name}\n              </button>\n              <button\n                type=\"button\"\n                onClick={() => deletePlace(place.id)}\n                name=\"button\"\n              >\n                X\n              </button>\n            </div>\n          ))\n        )}\n      </div>\n\n      {addForm ? (\n        <PopUpForm\n          closeForm={() => setAddForm(false)}\n          submit={addPlace}\n          inputs={[\n            { title: \"Name\", name: \"name\" },\n            { title: \"Description\", name: \"description\" },\n            { title: \"Extra info\", name: \"extra_info\" },\n            { title: \"Public\", name: \"is_public\",type:'checkbox' },\n          ]}\n          initData={{\n            name: \"\",\n            description: \"\",\n            extra_info: \"\",\n            is_public: false,\n          }}\n          submitText=\"Add Place\"\n        />\n      ) : (\n        <>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddForm(true)}\n            name=\"button\"\n          >\n            New place\n          </button>\n          <button\n            type=\"button\"\n            className=\"CharacterBook_button\"\n            onClick={() => setAddExistingForm(true)}\n            name=\"btn\"\n          >\n            Add existing place\n          </button>\n        </>\n      )}\n\n      <div className=\"CharacterBook_Back\" onClick={() => changePlace(-1)}></div>\n      <div className=\"CharacterBook_Next\" onClick={() => changePlace(1)}></div>\n    </>\n  );\n};\nexport default PlaceBook;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}